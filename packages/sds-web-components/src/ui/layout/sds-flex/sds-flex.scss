@import 'reset';

:host(.flex-container) {
  margin: 0 auto;
  max-width: var(--global-container-max-width);
  width: 100%;
}

:host {
  width: 100%;

  --flex-gap: 0px;

  align-items: var(--flex-align-secondary, 'start');
  display: flex;
  flex-direction: var(--flex-direction, 'row');
  gap: var(--flex-gap);
  justify-content: var(--flex-align-primary, 'start');
}

:host(.flex-type-half) {
  --column-major: calc(var(--sds-responsive-ratio-column-half) / 2);
  --column-minor: calc(var(--sds-responsive-ratio-column-half) / 2);
}

:host(.flex-type-quarter) {
  --column-major: calc(var(--sds-responsive-ratio-column-quarter-major) / 4);
  --column-minor: calc(var(--sds-responsive-ratio-column-quarter-minor) / 4);
}

:host(.flex-type-third) {
  --column-major: calc(var(--sds-responsive-ratio-column-third-major) / 3);
  --column-minor: calc(var(--sds-responsive-ratio-column-third-minor) / 3);
}

:host(.flex-direction-column),
:host(.flex-direction-column-reverse) {
  :host(.flex-align-secondary-stretch) > * {
    width: 100%;
  }
}

:host(.flex-type-half),
:host(.flex-type-quarter),
:host(.flex-type-third) {
  // All of these styles are used for the sds-flex-item, but must also be available for
  // any child of sds-flex

  ::slotted(.flex-item-size-full) {
    --column-ratio: calc(var(--sds-responsive-ratio-column-full) / 1);
  }

  ::slotted(.flex-item-size-half) {
    --column-ratio: calc(var(--sds-responsive-ratio-column-half) / 2);
  }

  ::slotted(.flex-item-size-major) {
    --column-ratio: var(--column-major);
  }

  ::slotted(.flex-item-size-minor) {
    --column-ratio: var(--column-minor);
  }

  ::slotted(*) {
    --column-count: calc(1 / var(--column-ratio));
    --base-width: calc((100% / var(--column-count)) - (((var(--column-count) - 1) / var(--column-count)) * var(--flex-gap)));
    --column-span: calc(var(--column-ratio) * var(--column-count));

    flex-basis: calc(var(--column-span) * var(--base-width));
    max-width: calc(var(--column-span) * var(--base-width));
    box-sizing: border-box;
  }
}

:host(.flex-direction-row),
:host(.flex-direction-row-reverse) {
  > :not(.flex-item) {
    --column-ratio: var(--column-minor);
  }

  &:host(.flex-type-auto) {
    &:host(.flex-align-primary-stretch) > * {
      flex: 1;
    }
  }
}

.flex-item-size-fill {
  flex-grow: 1;
}

:host(.flex-wrap) {
  flex-wrap: wrap;
}

:host(.flex-gap-100) {
  --flex-gap: var(--sds-size-space-100);
}

:host(.flex-gap-200) {
  --flex-gap: var(--sds-size-space-200);
}

:host(.flex-gap-300) {
  --flex-gap: var(--sds-size-space-300);
}

:host(.flex-gap-400) {
  --flex-gap: var(--sds-size-space-400);
}

:host(.flex-gap-600) {
  --flex-gap: var(--sds-size-space-600);
}

:host(.flex-gap-800) {
  --flex-gap: var(--sds-size-space-800);
}

:host(.flex-gap-1200) {
  --flex-gap: var(--sds-size-space-1200);
}

:host(.flex-gap-1600) {
  --flex-gap: var(--sds-size-space-1600);
}
