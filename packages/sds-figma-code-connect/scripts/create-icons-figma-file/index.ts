/**
 * This script uses the `icons.json` generated by the base SDS repo's script (https://github.com/figma/sds/tree/main/scripts/icons)
 */
import { convertToKebabCase } from 'scripts/utils';
import data from './icons.json';
import fs from 'fs/promises';

const HTML_OUTPUT_FILE = 'src/code-connect/icons/sds-icons.figma.ts';
const REACT_OUTPUT_FILE = 'src/code-connect/icons/sds-icons.figma.tsx';

const createIconsFigmaFile = async () => {
  const nodeIdRegex = new RegExp(/node-id=(\d+:\d+)/);

  const outputHTML = `import figma, { html } from '@figma/code-connect/html';

// generated via \`sds-figma-code-connect/scripts/create-icons-figma-file/\`

${data
  .map(([pascalName, _component, figmaConnect]) => {
    if (!figmaConnect || !pascalName) {
      return '';
    }
    const match = nodeIdRegex.exec(figmaConnect);
    if (!match) {
      return;
    }
    const nodeId = match[1];

    const name = convertToKebabCase(pascalName);

    return `figma.connect('<FIGMA_ICONS_BASE>?node-id=${nodeId}', {
\tprops: { size: figma.enum('Size', { '20': '20', '24': '24', '32': '32', '40': '40', '48': '48' }) },
\texample: ({ size }) => html\`<sds-${name} size=\${size}></sds-${name}>\`,
});`;
  })
  .join('\n')}
  `;

  await fs.writeFile(HTML_OUTPUT_FILE, outputHTML, { encoding: 'utf-8' });

  const outputReact = `import figma from "@figma/code-connect";

// generated via \`sds-figma-code-connect/scripts/create-icons-figma-file/\`   

import { ${data.map(([pascalName]) => `Sds${pascalName}`).join(', ')} } from 'sds-react-components';
${data
  .map(([pascalName, _component, figmaConnect]) => {
    return figmaConnect.replaceAll(pascalName, `Sds${pascalName}`);
  })
  .join('\n')}
  `;

  await fs.writeFile(REACT_OUTPUT_FILE, outputReact, { encoding: 'utf-8' });
};

createIconsFigmaFile();
