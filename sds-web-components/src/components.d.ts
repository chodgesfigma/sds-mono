/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import { IconSize } from './ui/primitives/SdsIcon/Icon';
export { IconSize } from './ui/primitives/SdsIcon/Icon';
export namespace Components {
  interface IconActivity {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAirplay {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlertCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlertOctagon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlertTriangle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlignCenter {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlignJustify {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlignLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlignRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAnchor {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAperture {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArchive {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowDownCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowDownLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowDownRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowLeftCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowRightCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowUpCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowUpLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowUpRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAtSign {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAward {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBarChart {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBarChart2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBattery {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBatteryCharging {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBell {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBellOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBluetooth {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBold {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBook {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBookOpen {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBookmark {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBox {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBriefcase {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCalendar {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCamera {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCameraOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCast {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCheck {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCheckCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCheckSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronsDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronsLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronsRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronsUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChrome {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconClipboard {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconClock {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloud {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudDrizzle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudLightning {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudRain {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudSnow {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCode {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCodepen {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCodesandbox {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCoffee {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconColumns {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCommand {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCompass {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCopy {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerDownLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerDownRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerLeftDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerLeftUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerRightDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerRightUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerUpLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerUpRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCpu {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCreditCard {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCrop {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCrosshair {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDatabase {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDelete {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDisc {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDivide {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDivideCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDivideSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDollarSign {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDownload {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDownloadCloud {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDribbble {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDroplet {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEdit {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEdit2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEdit3 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconExternalLink {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEye {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEyeOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFacebook {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFastForward {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFeather {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFigma {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFile {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFileMinus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFilePlus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFileText {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFilm {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFilter {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFlag {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFolder {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFolderMinus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFolderPlus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFramer {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFrown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGift {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitBranch {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitCommit {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitMerge {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitPullRequest {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGithub {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitlab {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGlobe {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGrid {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHardDrive {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHash {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHeadphones {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHeart {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHelpCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHexagon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHome {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconImage {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconInbox {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconInfo {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconInstagram {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconItalic {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconKey {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLayers {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLayout {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLifeBuoy {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLink {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLink2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLinkedin {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconList {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLoader {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLock {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLogIn {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLogOut {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMail {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMap {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMapPin {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMaximize {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMaximize2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMeh {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMenu {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMessageCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMessageSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMic {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMicOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinimize {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinimize2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinusCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinusSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMonitor {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMoon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMoreHorizontal {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMoreVertical {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMousePointer {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMove {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMusic {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconNavigation {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconNavigation2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconOctagon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPackage {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPaperclip {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPause {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPauseCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPenTool {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPercent {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhone {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneCall {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneForwarded {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneIncoming {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneMissed {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneOutgoing {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPieChart {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlay {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlayCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlusCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlusSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPocket {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPower {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPrinter {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRadio {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRefreshCcw {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRefreshCw {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRepeat {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRewind {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRotateCcw {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRotateCw {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRss {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSave {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconScissors {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSearch {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSend {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconServer {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSettings {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShare2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShield {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShieldOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShoppingBag {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShoppingCart {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShuffle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSidebar {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSkipBack {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSkipForward {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSlack {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSlash {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSliders {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSmartphone {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSmile {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSpeaker {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconStar {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconStopCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSun {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSunrise {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSunset {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTable {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTablet {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTag {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTarget {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTerminal {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconThermometer {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconThumbsDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconThumbsUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconToggleLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconToggleRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTool {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrash {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrash2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrello {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrendingDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrendingUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTriangle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTruck {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTv {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTwitch {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTwitter {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconType {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUmbrella {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUnderline {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUnlock {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUpload {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUploadCloud {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUser {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUserCheck {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUserMinus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUserPlus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUserX {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUsers {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVideo {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVideoOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVoicemail {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVolume {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVolume1 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVolume2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVolumeX {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconWatch {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconWifi {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconWifiOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconWind {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconX {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconXCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconXOctagon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconXSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconYoutube {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconZap {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconZapOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconZoomIn {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconZoomOut {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface MyComponent {
    /**
     * The first name
     */
    first: string;
    /**
     * The last name
     */
    last: string;
    /**
     * The middle name
     */
    middle: string;
  }
}
declare global {
  interface HTMLIconActivityElement extends Components.IconActivity, HTMLStencilElement {}
  var HTMLIconActivityElement: {
    prototype: HTMLIconActivityElement;
    new (): HTMLIconActivityElement;
  };
  interface HTMLIconAirplayElement extends Components.IconAirplay, HTMLStencilElement {}
  var HTMLIconAirplayElement: {
    prototype: HTMLIconAirplayElement;
    new (): HTMLIconAirplayElement;
  };
  interface HTMLIconAlertCircleElement extends Components.IconAlertCircle, HTMLStencilElement {}
  var HTMLIconAlertCircleElement: {
    prototype: HTMLIconAlertCircleElement;
    new (): HTMLIconAlertCircleElement;
  };
  interface HTMLIconAlertOctagonElement extends Components.IconAlertOctagon, HTMLStencilElement {}
  var HTMLIconAlertOctagonElement: {
    prototype: HTMLIconAlertOctagonElement;
    new (): HTMLIconAlertOctagonElement;
  };
  interface HTMLIconAlertTriangleElement extends Components.IconAlertTriangle, HTMLStencilElement {}
  var HTMLIconAlertTriangleElement: {
    prototype: HTMLIconAlertTriangleElement;
    new (): HTMLIconAlertTriangleElement;
  };
  interface HTMLIconAlignCenterElement extends Components.IconAlignCenter, HTMLStencilElement {}
  var HTMLIconAlignCenterElement: {
    prototype: HTMLIconAlignCenterElement;
    new (): HTMLIconAlignCenterElement;
  };
  interface HTMLIconAlignJustifyElement extends Components.IconAlignJustify, HTMLStencilElement {}
  var HTMLIconAlignJustifyElement: {
    prototype: HTMLIconAlignJustifyElement;
    new (): HTMLIconAlignJustifyElement;
  };
  interface HTMLIconAlignLeftElement extends Components.IconAlignLeft, HTMLStencilElement {}
  var HTMLIconAlignLeftElement: {
    prototype: HTMLIconAlignLeftElement;
    new (): HTMLIconAlignLeftElement;
  };
  interface HTMLIconAlignRightElement extends Components.IconAlignRight, HTMLStencilElement {}
  var HTMLIconAlignRightElement: {
    prototype: HTMLIconAlignRightElement;
    new (): HTMLIconAlignRightElement;
  };
  interface HTMLIconAnchorElement extends Components.IconAnchor, HTMLStencilElement {}
  var HTMLIconAnchorElement: {
    prototype: HTMLIconAnchorElement;
    new (): HTMLIconAnchorElement;
  };
  interface HTMLIconApertureElement extends Components.IconAperture, HTMLStencilElement {}
  var HTMLIconApertureElement: {
    prototype: HTMLIconApertureElement;
    new (): HTMLIconApertureElement;
  };
  interface HTMLIconArchiveElement extends Components.IconArchive, HTMLStencilElement {}
  var HTMLIconArchiveElement: {
    prototype: HTMLIconArchiveElement;
    new (): HTMLIconArchiveElement;
  };
  interface HTMLIconArrowDownElement extends Components.IconArrowDown, HTMLStencilElement {}
  var HTMLIconArrowDownElement: {
    prototype: HTMLIconArrowDownElement;
    new (): HTMLIconArrowDownElement;
  };
  interface HTMLIconArrowDownCircleElement extends Components.IconArrowDownCircle, HTMLStencilElement {}
  var HTMLIconArrowDownCircleElement: {
    prototype: HTMLIconArrowDownCircleElement;
    new (): HTMLIconArrowDownCircleElement;
  };
  interface HTMLIconArrowDownLeftElement extends Components.IconArrowDownLeft, HTMLStencilElement {}
  var HTMLIconArrowDownLeftElement: {
    prototype: HTMLIconArrowDownLeftElement;
    new (): HTMLIconArrowDownLeftElement;
  };
  interface HTMLIconArrowDownRightElement extends Components.IconArrowDownRight, HTMLStencilElement {}
  var HTMLIconArrowDownRightElement: {
    prototype: HTMLIconArrowDownRightElement;
    new (): HTMLIconArrowDownRightElement;
  };
  interface HTMLIconArrowLeftElement extends Components.IconArrowLeft, HTMLStencilElement {}
  var HTMLIconArrowLeftElement: {
    prototype: HTMLIconArrowLeftElement;
    new (): HTMLIconArrowLeftElement;
  };
  interface HTMLIconArrowLeftCircleElement extends Components.IconArrowLeftCircle, HTMLStencilElement {}
  var HTMLIconArrowLeftCircleElement: {
    prototype: HTMLIconArrowLeftCircleElement;
    new (): HTMLIconArrowLeftCircleElement;
  };
  interface HTMLIconArrowRightElement extends Components.IconArrowRight, HTMLStencilElement {}
  var HTMLIconArrowRightElement: {
    prototype: HTMLIconArrowRightElement;
    new (): HTMLIconArrowRightElement;
  };
  interface HTMLIconArrowRightCircleElement extends Components.IconArrowRightCircle, HTMLStencilElement {}
  var HTMLIconArrowRightCircleElement: {
    prototype: HTMLIconArrowRightCircleElement;
    new (): HTMLIconArrowRightCircleElement;
  };
  interface HTMLIconArrowUpElement extends Components.IconArrowUp, HTMLStencilElement {}
  var HTMLIconArrowUpElement: {
    prototype: HTMLIconArrowUpElement;
    new (): HTMLIconArrowUpElement;
  };
  interface HTMLIconArrowUpCircleElement extends Components.IconArrowUpCircle, HTMLStencilElement {}
  var HTMLIconArrowUpCircleElement: {
    prototype: HTMLIconArrowUpCircleElement;
    new (): HTMLIconArrowUpCircleElement;
  };
  interface HTMLIconArrowUpLeftElement extends Components.IconArrowUpLeft, HTMLStencilElement {}
  var HTMLIconArrowUpLeftElement: {
    prototype: HTMLIconArrowUpLeftElement;
    new (): HTMLIconArrowUpLeftElement;
  };
  interface HTMLIconArrowUpRightElement extends Components.IconArrowUpRight, HTMLStencilElement {}
  var HTMLIconArrowUpRightElement: {
    prototype: HTMLIconArrowUpRightElement;
    new (): HTMLIconArrowUpRightElement;
  };
  interface HTMLIconAtSignElement extends Components.IconAtSign, HTMLStencilElement {}
  var HTMLIconAtSignElement: {
    prototype: HTMLIconAtSignElement;
    new (): HTMLIconAtSignElement;
  };
  interface HTMLIconAwardElement extends Components.IconAward, HTMLStencilElement {}
  var HTMLIconAwardElement: {
    prototype: HTMLIconAwardElement;
    new (): HTMLIconAwardElement;
  };
  interface HTMLIconBarChartElement extends Components.IconBarChart, HTMLStencilElement {}
  var HTMLIconBarChartElement: {
    prototype: HTMLIconBarChartElement;
    new (): HTMLIconBarChartElement;
  };
  interface HTMLIconBarChart2Element extends Components.IconBarChart2, HTMLStencilElement {}
  var HTMLIconBarChart2Element: {
    prototype: HTMLIconBarChart2Element;
    new (): HTMLIconBarChart2Element;
  };
  interface HTMLIconBatteryElement extends Components.IconBattery, HTMLStencilElement {}
  var HTMLIconBatteryElement: {
    prototype: HTMLIconBatteryElement;
    new (): HTMLIconBatteryElement;
  };
  interface HTMLIconBatteryChargingElement extends Components.IconBatteryCharging, HTMLStencilElement {}
  var HTMLIconBatteryChargingElement: {
    prototype: HTMLIconBatteryChargingElement;
    new (): HTMLIconBatteryChargingElement;
  };
  interface HTMLIconBellElement extends Components.IconBell, HTMLStencilElement {}
  var HTMLIconBellElement: {
    prototype: HTMLIconBellElement;
    new (): HTMLIconBellElement;
  };
  interface HTMLIconBellOffElement extends Components.IconBellOff, HTMLStencilElement {}
  var HTMLIconBellOffElement: {
    prototype: HTMLIconBellOffElement;
    new (): HTMLIconBellOffElement;
  };
  interface HTMLIconBluetoothElement extends Components.IconBluetooth, HTMLStencilElement {}
  var HTMLIconBluetoothElement: {
    prototype: HTMLIconBluetoothElement;
    new (): HTMLIconBluetoothElement;
  };
  interface HTMLIconBoldElement extends Components.IconBold, HTMLStencilElement {}
  var HTMLIconBoldElement: {
    prototype: HTMLIconBoldElement;
    new (): HTMLIconBoldElement;
  };
  interface HTMLIconBookElement extends Components.IconBook, HTMLStencilElement {}
  var HTMLIconBookElement: {
    prototype: HTMLIconBookElement;
    new (): HTMLIconBookElement;
  };
  interface HTMLIconBookOpenElement extends Components.IconBookOpen, HTMLStencilElement {}
  var HTMLIconBookOpenElement: {
    prototype: HTMLIconBookOpenElement;
    new (): HTMLIconBookOpenElement;
  };
  interface HTMLIconBookmarkElement extends Components.IconBookmark, HTMLStencilElement {}
  var HTMLIconBookmarkElement: {
    prototype: HTMLIconBookmarkElement;
    new (): HTMLIconBookmarkElement;
  };
  interface HTMLIconBoxElement extends Components.IconBox, HTMLStencilElement {}
  var HTMLIconBoxElement: {
    prototype: HTMLIconBoxElement;
    new (): HTMLIconBoxElement;
  };
  interface HTMLIconBriefcaseElement extends Components.IconBriefcase, HTMLStencilElement {}
  var HTMLIconBriefcaseElement: {
    prototype: HTMLIconBriefcaseElement;
    new (): HTMLIconBriefcaseElement;
  };
  interface HTMLIconCalendarElement extends Components.IconCalendar, HTMLStencilElement {}
  var HTMLIconCalendarElement: {
    prototype: HTMLIconCalendarElement;
    new (): HTMLIconCalendarElement;
  };
  interface HTMLIconCameraElement extends Components.IconCamera, HTMLStencilElement {}
  var HTMLIconCameraElement: {
    prototype: HTMLIconCameraElement;
    new (): HTMLIconCameraElement;
  };
  interface HTMLIconCameraOffElement extends Components.IconCameraOff, HTMLStencilElement {}
  var HTMLIconCameraOffElement: {
    prototype: HTMLIconCameraOffElement;
    new (): HTMLIconCameraOffElement;
  };
  interface HTMLIconCastElement extends Components.IconCast, HTMLStencilElement {}
  var HTMLIconCastElement: {
    prototype: HTMLIconCastElement;
    new (): HTMLIconCastElement;
  };
  interface HTMLIconCheckElement extends Components.IconCheck, HTMLStencilElement {}
  var HTMLIconCheckElement: {
    prototype: HTMLIconCheckElement;
    new (): HTMLIconCheckElement;
  };
  interface HTMLIconCheckCircleElement extends Components.IconCheckCircle, HTMLStencilElement {}
  var HTMLIconCheckCircleElement: {
    prototype: HTMLIconCheckCircleElement;
    new (): HTMLIconCheckCircleElement;
  };
  interface HTMLIconCheckSquareElement extends Components.IconCheckSquare, HTMLStencilElement {}
  var HTMLIconCheckSquareElement: {
    prototype: HTMLIconCheckSquareElement;
    new (): HTMLIconCheckSquareElement;
  };
  interface HTMLIconChevronDownElement extends Components.IconChevronDown, HTMLStencilElement {}
  var HTMLIconChevronDownElement: {
    prototype: HTMLIconChevronDownElement;
    new (): HTMLIconChevronDownElement;
  };
  interface HTMLIconChevronLeftElement extends Components.IconChevronLeft, HTMLStencilElement {}
  var HTMLIconChevronLeftElement: {
    prototype: HTMLIconChevronLeftElement;
    new (): HTMLIconChevronLeftElement;
  };
  interface HTMLIconChevronRightElement extends Components.IconChevronRight, HTMLStencilElement {}
  var HTMLIconChevronRightElement: {
    prototype: HTMLIconChevronRightElement;
    new (): HTMLIconChevronRightElement;
  };
  interface HTMLIconChevronUpElement extends Components.IconChevronUp, HTMLStencilElement {}
  var HTMLIconChevronUpElement: {
    prototype: HTMLIconChevronUpElement;
    new (): HTMLIconChevronUpElement;
  };
  interface HTMLIconChevronsDownElement extends Components.IconChevronsDown, HTMLStencilElement {}
  var HTMLIconChevronsDownElement: {
    prototype: HTMLIconChevronsDownElement;
    new (): HTMLIconChevronsDownElement;
  };
  interface HTMLIconChevronsLeftElement extends Components.IconChevronsLeft, HTMLStencilElement {}
  var HTMLIconChevronsLeftElement: {
    prototype: HTMLIconChevronsLeftElement;
    new (): HTMLIconChevronsLeftElement;
  };
  interface HTMLIconChevronsRightElement extends Components.IconChevronsRight, HTMLStencilElement {}
  var HTMLIconChevronsRightElement: {
    prototype: HTMLIconChevronsRightElement;
    new (): HTMLIconChevronsRightElement;
  };
  interface HTMLIconChevronsUpElement extends Components.IconChevronsUp, HTMLStencilElement {}
  var HTMLIconChevronsUpElement: {
    prototype: HTMLIconChevronsUpElement;
    new (): HTMLIconChevronsUpElement;
  };
  interface HTMLIconChromeElement extends Components.IconChrome, HTMLStencilElement {}
  var HTMLIconChromeElement: {
    prototype: HTMLIconChromeElement;
    new (): HTMLIconChromeElement;
  };
  interface HTMLIconCircleElement extends Components.IconCircle, HTMLStencilElement {}
  var HTMLIconCircleElement: {
    prototype: HTMLIconCircleElement;
    new (): HTMLIconCircleElement;
  };
  interface HTMLIconClipboardElement extends Components.IconClipboard, HTMLStencilElement {}
  var HTMLIconClipboardElement: {
    prototype: HTMLIconClipboardElement;
    new (): HTMLIconClipboardElement;
  };
  interface HTMLIconClockElement extends Components.IconClock, HTMLStencilElement {}
  var HTMLIconClockElement: {
    prototype: HTMLIconClockElement;
    new (): HTMLIconClockElement;
  };
  interface HTMLIconCloudElement extends Components.IconCloud, HTMLStencilElement {}
  var HTMLIconCloudElement: {
    prototype: HTMLIconCloudElement;
    new (): HTMLIconCloudElement;
  };
  interface HTMLIconCloudDrizzleElement extends Components.IconCloudDrizzle, HTMLStencilElement {}
  var HTMLIconCloudDrizzleElement: {
    prototype: HTMLIconCloudDrizzleElement;
    new (): HTMLIconCloudDrizzleElement;
  };
  interface HTMLIconCloudLightningElement extends Components.IconCloudLightning, HTMLStencilElement {}
  var HTMLIconCloudLightningElement: {
    prototype: HTMLIconCloudLightningElement;
    new (): HTMLIconCloudLightningElement;
  };
  interface HTMLIconCloudOffElement extends Components.IconCloudOff, HTMLStencilElement {}
  var HTMLIconCloudOffElement: {
    prototype: HTMLIconCloudOffElement;
    new (): HTMLIconCloudOffElement;
  };
  interface HTMLIconCloudRainElement extends Components.IconCloudRain, HTMLStencilElement {}
  var HTMLIconCloudRainElement: {
    prototype: HTMLIconCloudRainElement;
    new (): HTMLIconCloudRainElement;
  };
  interface HTMLIconCloudSnowElement extends Components.IconCloudSnow, HTMLStencilElement {}
  var HTMLIconCloudSnowElement: {
    prototype: HTMLIconCloudSnowElement;
    new (): HTMLIconCloudSnowElement;
  };
  interface HTMLIconCodeElement extends Components.IconCode, HTMLStencilElement {}
  var HTMLIconCodeElement: {
    prototype: HTMLIconCodeElement;
    new (): HTMLIconCodeElement;
  };
  interface HTMLIconCodepenElement extends Components.IconCodepen, HTMLStencilElement {}
  var HTMLIconCodepenElement: {
    prototype: HTMLIconCodepenElement;
    new (): HTMLIconCodepenElement;
  };
  interface HTMLIconCodesandboxElement extends Components.IconCodesandbox, HTMLStencilElement {}
  var HTMLIconCodesandboxElement: {
    prototype: HTMLIconCodesandboxElement;
    new (): HTMLIconCodesandboxElement;
  };
  interface HTMLIconCoffeeElement extends Components.IconCoffee, HTMLStencilElement {}
  var HTMLIconCoffeeElement: {
    prototype: HTMLIconCoffeeElement;
    new (): HTMLIconCoffeeElement;
  };
  interface HTMLIconColumnsElement extends Components.IconColumns, HTMLStencilElement {}
  var HTMLIconColumnsElement: {
    prototype: HTMLIconColumnsElement;
    new (): HTMLIconColumnsElement;
  };
  interface HTMLIconCommandElement extends Components.IconCommand, HTMLStencilElement {}
  var HTMLIconCommandElement: {
    prototype: HTMLIconCommandElement;
    new (): HTMLIconCommandElement;
  };
  interface HTMLIconCompassElement extends Components.IconCompass, HTMLStencilElement {}
  var HTMLIconCompassElement: {
    prototype: HTMLIconCompassElement;
    new (): HTMLIconCompassElement;
  };
  interface HTMLIconCopyElement extends Components.IconCopy, HTMLStencilElement {}
  var HTMLIconCopyElement: {
    prototype: HTMLIconCopyElement;
    new (): HTMLIconCopyElement;
  };
  interface HTMLIconCornerDownLeftElement extends Components.IconCornerDownLeft, HTMLStencilElement {}
  var HTMLIconCornerDownLeftElement: {
    prototype: HTMLIconCornerDownLeftElement;
    new (): HTMLIconCornerDownLeftElement;
  };
  interface HTMLIconCornerDownRightElement extends Components.IconCornerDownRight, HTMLStencilElement {}
  var HTMLIconCornerDownRightElement: {
    prototype: HTMLIconCornerDownRightElement;
    new (): HTMLIconCornerDownRightElement;
  };
  interface HTMLIconCornerLeftDownElement extends Components.IconCornerLeftDown, HTMLStencilElement {}
  var HTMLIconCornerLeftDownElement: {
    prototype: HTMLIconCornerLeftDownElement;
    new (): HTMLIconCornerLeftDownElement;
  };
  interface HTMLIconCornerLeftUpElement extends Components.IconCornerLeftUp, HTMLStencilElement {}
  var HTMLIconCornerLeftUpElement: {
    prototype: HTMLIconCornerLeftUpElement;
    new (): HTMLIconCornerLeftUpElement;
  };
  interface HTMLIconCornerRightDownElement extends Components.IconCornerRightDown, HTMLStencilElement {}
  var HTMLIconCornerRightDownElement: {
    prototype: HTMLIconCornerRightDownElement;
    new (): HTMLIconCornerRightDownElement;
  };
  interface HTMLIconCornerRightUpElement extends Components.IconCornerRightUp, HTMLStencilElement {}
  var HTMLIconCornerRightUpElement: {
    prototype: HTMLIconCornerRightUpElement;
    new (): HTMLIconCornerRightUpElement;
  };
  interface HTMLIconCornerUpLeftElement extends Components.IconCornerUpLeft, HTMLStencilElement {}
  var HTMLIconCornerUpLeftElement: {
    prototype: HTMLIconCornerUpLeftElement;
    new (): HTMLIconCornerUpLeftElement;
  };
  interface HTMLIconCornerUpRightElement extends Components.IconCornerUpRight, HTMLStencilElement {}
  var HTMLIconCornerUpRightElement: {
    prototype: HTMLIconCornerUpRightElement;
    new (): HTMLIconCornerUpRightElement;
  };
  interface HTMLIconCpuElement extends Components.IconCpu, HTMLStencilElement {}
  var HTMLIconCpuElement: {
    prototype: HTMLIconCpuElement;
    new (): HTMLIconCpuElement;
  };
  interface HTMLIconCreditCardElement extends Components.IconCreditCard, HTMLStencilElement {}
  var HTMLIconCreditCardElement: {
    prototype: HTMLIconCreditCardElement;
    new (): HTMLIconCreditCardElement;
  };
  interface HTMLIconCropElement extends Components.IconCrop, HTMLStencilElement {}
  var HTMLIconCropElement: {
    prototype: HTMLIconCropElement;
    new (): HTMLIconCropElement;
  };
  interface HTMLIconCrosshairElement extends Components.IconCrosshair, HTMLStencilElement {}
  var HTMLIconCrosshairElement: {
    prototype: HTMLIconCrosshairElement;
    new (): HTMLIconCrosshairElement;
  };
  interface HTMLIconDatabaseElement extends Components.IconDatabase, HTMLStencilElement {}
  var HTMLIconDatabaseElement: {
    prototype: HTMLIconDatabaseElement;
    new (): HTMLIconDatabaseElement;
  };
  interface HTMLIconDeleteElement extends Components.IconDelete, HTMLStencilElement {}
  var HTMLIconDeleteElement: {
    prototype: HTMLIconDeleteElement;
    new (): HTMLIconDeleteElement;
  };
  interface HTMLIconDiscElement extends Components.IconDisc, HTMLStencilElement {}
  var HTMLIconDiscElement: {
    prototype: HTMLIconDiscElement;
    new (): HTMLIconDiscElement;
  };
  interface HTMLIconDivideElement extends Components.IconDivide, HTMLStencilElement {}
  var HTMLIconDivideElement: {
    prototype: HTMLIconDivideElement;
    new (): HTMLIconDivideElement;
  };
  interface HTMLIconDivideCircleElement extends Components.IconDivideCircle, HTMLStencilElement {}
  var HTMLIconDivideCircleElement: {
    prototype: HTMLIconDivideCircleElement;
    new (): HTMLIconDivideCircleElement;
  };
  interface HTMLIconDivideSquareElement extends Components.IconDivideSquare, HTMLStencilElement {}
  var HTMLIconDivideSquareElement: {
    prototype: HTMLIconDivideSquareElement;
    new (): HTMLIconDivideSquareElement;
  };
  interface HTMLIconDollarSignElement extends Components.IconDollarSign, HTMLStencilElement {}
  var HTMLIconDollarSignElement: {
    prototype: HTMLIconDollarSignElement;
    new (): HTMLIconDollarSignElement;
  };
  interface HTMLIconDownloadElement extends Components.IconDownload, HTMLStencilElement {}
  var HTMLIconDownloadElement: {
    prototype: HTMLIconDownloadElement;
    new (): HTMLIconDownloadElement;
  };
  interface HTMLIconDownloadCloudElement extends Components.IconDownloadCloud, HTMLStencilElement {}
  var HTMLIconDownloadCloudElement: {
    prototype: HTMLIconDownloadCloudElement;
    new (): HTMLIconDownloadCloudElement;
  };
  interface HTMLIconDribbbleElement extends Components.IconDribbble, HTMLStencilElement {}
  var HTMLIconDribbbleElement: {
    prototype: HTMLIconDribbbleElement;
    new (): HTMLIconDribbbleElement;
  };
  interface HTMLIconDropletElement extends Components.IconDroplet, HTMLStencilElement {}
  var HTMLIconDropletElement: {
    prototype: HTMLIconDropletElement;
    new (): HTMLIconDropletElement;
  };
  interface HTMLIconEditElement extends Components.IconEdit, HTMLStencilElement {}
  var HTMLIconEditElement: {
    prototype: HTMLIconEditElement;
    new (): HTMLIconEditElement;
  };
  interface HTMLIconEdit2Element extends Components.IconEdit2, HTMLStencilElement {}
  var HTMLIconEdit2Element: {
    prototype: HTMLIconEdit2Element;
    new (): HTMLIconEdit2Element;
  };
  interface HTMLIconEdit3Element extends Components.IconEdit3, HTMLStencilElement {}
  var HTMLIconEdit3Element: {
    prototype: HTMLIconEdit3Element;
    new (): HTMLIconEdit3Element;
  };
  interface HTMLIconExternalLinkElement extends Components.IconExternalLink, HTMLStencilElement {}
  var HTMLIconExternalLinkElement: {
    prototype: HTMLIconExternalLinkElement;
    new (): HTMLIconExternalLinkElement;
  };
  interface HTMLIconEyeElement extends Components.IconEye, HTMLStencilElement {}
  var HTMLIconEyeElement: {
    prototype: HTMLIconEyeElement;
    new (): HTMLIconEyeElement;
  };
  interface HTMLIconEyeOffElement extends Components.IconEyeOff, HTMLStencilElement {}
  var HTMLIconEyeOffElement: {
    prototype: HTMLIconEyeOffElement;
    new (): HTMLIconEyeOffElement;
  };
  interface HTMLIconFacebookElement extends Components.IconFacebook, HTMLStencilElement {}
  var HTMLIconFacebookElement: {
    prototype: HTMLIconFacebookElement;
    new (): HTMLIconFacebookElement;
  };
  interface HTMLIconFastForwardElement extends Components.IconFastForward, HTMLStencilElement {}
  var HTMLIconFastForwardElement: {
    prototype: HTMLIconFastForwardElement;
    new (): HTMLIconFastForwardElement;
  };
  interface HTMLIconFeatherElement extends Components.IconFeather, HTMLStencilElement {}
  var HTMLIconFeatherElement: {
    prototype: HTMLIconFeatherElement;
    new (): HTMLIconFeatherElement;
  };
  interface HTMLIconFigmaElement extends Components.IconFigma, HTMLStencilElement {}
  var HTMLIconFigmaElement: {
    prototype: HTMLIconFigmaElement;
    new (): HTMLIconFigmaElement;
  };
  interface HTMLIconFileElement extends Components.IconFile, HTMLStencilElement {}
  var HTMLIconFileElement: {
    prototype: HTMLIconFileElement;
    new (): HTMLIconFileElement;
  };
  interface HTMLIconFileMinusElement extends Components.IconFileMinus, HTMLStencilElement {}
  var HTMLIconFileMinusElement: {
    prototype: HTMLIconFileMinusElement;
    new (): HTMLIconFileMinusElement;
  };
  interface HTMLIconFilePlusElement extends Components.IconFilePlus, HTMLStencilElement {}
  var HTMLIconFilePlusElement: {
    prototype: HTMLIconFilePlusElement;
    new (): HTMLIconFilePlusElement;
  };
  interface HTMLIconFileTextElement extends Components.IconFileText, HTMLStencilElement {}
  var HTMLIconFileTextElement: {
    prototype: HTMLIconFileTextElement;
    new (): HTMLIconFileTextElement;
  };
  interface HTMLIconFilmElement extends Components.IconFilm, HTMLStencilElement {}
  var HTMLIconFilmElement: {
    prototype: HTMLIconFilmElement;
    new (): HTMLIconFilmElement;
  };
  interface HTMLIconFilterElement extends Components.IconFilter, HTMLStencilElement {}
  var HTMLIconFilterElement: {
    prototype: HTMLIconFilterElement;
    new (): HTMLIconFilterElement;
  };
  interface HTMLIconFlagElement extends Components.IconFlag, HTMLStencilElement {}
  var HTMLIconFlagElement: {
    prototype: HTMLIconFlagElement;
    new (): HTMLIconFlagElement;
  };
  interface HTMLIconFolderElement extends Components.IconFolder, HTMLStencilElement {}
  var HTMLIconFolderElement: {
    prototype: HTMLIconFolderElement;
    new (): HTMLIconFolderElement;
  };
  interface HTMLIconFolderMinusElement extends Components.IconFolderMinus, HTMLStencilElement {}
  var HTMLIconFolderMinusElement: {
    prototype: HTMLIconFolderMinusElement;
    new (): HTMLIconFolderMinusElement;
  };
  interface HTMLIconFolderPlusElement extends Components.IconFolderPlus, HTMLStencilElement {}
  var HTMLIconFolderPlusElement: {
    prototype: HTMLIconFolderPlusElement;
    new (): HTMLIconFolderPlusElement;
  };
  interface HTMLIconFramerElement extends Components.IconFramer, HTMLStencilElement {}
  var HTMLIconFramerElement: {
    prototype: HTMLIconFramerElement;
    new (): HTMLIconFramerElement;
  };
  interface HTMLIconFrownElement extends Components.IconFrown, HTMLStencilElement {}
  var HTMLIconFrownElement: {
    prototype: HTMLIconFrownElement;
    new (): HTMLIconFrownElement;
  };
  interface HTMLIconGiftElement extends Components.IconGift, HTMLStencilElement {}
  var HTMLIconGiftElement: {
    prototype: HTMLIconGiftElement;
    new (): HTMLIconGiftElement;
  };
  interface HTMLIconGitBranchElement extends Components.IconGitBranch, HTMLStencilElement {}
  var HTMLIconGitBranchElement: {
    prototype: HTMLIconGitBranchElement;
    new (): HTMLIconGitBranchElement;
  };
  interface HTMLIconGitCommitElement extends Components.IconGitCommit, HTMLStencilElement {}
  var HTMLIconGitCommitElement: {
    prototype: HTMLIconGitCommitElement;
    new (): HTMLIconGitCommitElement;
  };
  interface HTMLIconGitMergeElement extends Components.IconGitMerge, HTMLStencilElement {}
  var HTMLIconGitMergeElement: {
    prototype: HTMLIconGitMergeElement;
    new (): HTMLIconGitMergeElement;
  };
  interface HTMLIconGitPullRequestElement extends Components.IconGitPullRequest, HTMLStencilElement {}
  var HTMLIconGitPullRequestElement: {
    prototype: HTMLIconGitPullRequestElement;
    new (): HTMLIconGitPullRequestElement;
  };
  interface HTMLIconGithubElement extends Components.IconGithub, HTMLStencilElement {}
  var HTMLIconGithubElement: {
    prototype: HTMLIconGithubElement;
    new (): HTMLIconGithubElement;
  };
  interface HTMLIconGitlabElement extends Components.IconGitlab, HTMLStencilElement {}
  var HTMLIconGitlabElement: {
    prototype: HTMLIconGitlabElement;
    new (): HTMLIconGitlabElement;
  };
  interface HTMLIconGlobeElement extends Components.IconGlobe, HTMLStencilElement {}
  var HTMLIconGlobeElement: {
    prototype: HTMLIconGlobeElement;
    new (): HTMLIconGlobeElement;
  };
  interface HTMLIconGridElement extends Components.IconGrid, HTMLStencilElement {}
  var HTMLIconGridElement: {
    prototype: HTMLIconGridElement;
    new (): HTMLIconGridElement;
  };
  interface HTMLIconHardDriveElement extends Components.IconHardDrive, HTMLStencilElement {}
  var HTMLIconHardDriveElement: {
    prototype: HTMLIconHardDriveElement;
    new (): HTMLIconHardDriveElement;
  };
  interface HTMLIconHashElement extends Components.IconHash, HTMLStencilElement {}
  var HTMLIconHashElement: {
    prototype: HTMLIconHashElement;
    new (): HTMLIconHashElement;
  };
  interface HTMLIconHeadphonesElement extends Components.IconHeadphones, HTMLStencilElement {}
  var HTMLIconHeadphonesElement: {
    prototype: HTMLIconHeadphonesElement;
    new (): HTMLIconHeadphonesElement;
  };
  interface HTMLIconHeartElement extends Components.IconHeart, HTMLStencilElement {}
  var HTMLIconHeartElement: {
    prototype: HTMLIconHeartElement;
    new (): HTMLIconHeartElement;
  };
  interface HTMLIconHelpCircleElement extends Components.IconHelpCircle, HTMLStencilElement {}
  var HTMLIconHelpCircleElement: {
    prototype: HTMLIconHelpCircleElement;
    new (): HTMLIconHelpCircleElement;
  };
  interface HTMLIconHexagonElement extends Components.IconHexagon, HTMLStencilElement {}
  var HTMLIconHexagonElement: {
    prototype: HTMLIconHexagonElement;
    new (): HTMLIconHexagonElement;
  };
  interface HTMLIconHomeElement extends Components.IconHome, HTMLStencilElement {}
  var HTMLIconHomeElement: {
    prototype: HTMLIconHomeElement;
    new (): HTMLIconHomeElement;
  };
  interface HTMLIconImageElement extends Components.IconImage, HTMLStencilElement {}
  var HTMLIconImageElement: {
    prototype: HTMLIconImageElement;
    new (): HTMLIconImageElement;
  };
  interface HTMLIconInboxElement extends Components.IconInbox, HTMLStencilElement {}
  var HTMLIconInboxElement: {
    prototype: HTMLIconInboxElement;
    new (): HTMLIconInboxElement;
  };
  interface HTMLIconInfoElement extends Components.IconInfo, HTMLStencilElement {}
  var HTMLIconInfoElement: {
    prototype: HTMLIconInfoElement;
    new (): HTMLIconInfoElement;
  };
  interface HTMLIconInstagramElement extends Components.IconInstagram, HTMLStencilElement {}
  var HTMLIconInstagramElement: {
    prototype: HTMLIconInstagramElement;
    new (): HTMLIconInstagramElement;
  };
  interface HTMLIconItalicElement extends Components.IconItalic, HTMLStencilElement {}
  var HTMLIconItalicElement: {
    prototype: HTMLIconItalicElement;
    new (): HTMLIconItalicElement;
  };
  interface HTMLIconKeyElement extends Components.IconKey, HTMLStencilElement {}
  var HTMLIconKeyElement: {
    prototype: HTMLIconKeyElement;
    new (): HTMLIconKeyElement;
  };
  interface HTMLIconLayersElement extends Components.IconLayers, HTMLStencilElement {}
  var HTMLIconLayersElement: {
    prototype: HTMLIconLayersElement;
    new (): HTMLIconLayersElement;
  };
  interface HTMLIconLayoutElement extends Components.IconLayout, HTMLStencilElement {}
  var HTMLIconLayoutElement: {
    prototype: HTMLIconLayoutElement;
    new (): HTMLIconLayoutElement;
  };
  interface HTMLIconLifeBuoyElement extends Components.IconLifeBuoy, HTMLStencilElement {}
  var HTMLIconLifeBuoyElement: {
    prototype: HTMLIconLifeBuoyElement;
    new (): HTMLIconLifeBuoyElement;
  };
  interface HTMLIconLinkElement extends Components.IconLink, HTMLStencilElement {}
  var HTMLIconLinkElement: {
    prototype: HTMLIconLinkElement;
    new (): HTMLIconLinkElement;
  };
  interface HTMLIconLink2Element extends Components.IconLink2, HTMLStencilElement {}
  var HTMLIconLink2Element: {
    prototype: HTMLIconLink2Element;
    new (): HTMLIconLink2Element;
  };
  interface HTMLIconLinkedinElement extends Components.IconLinkedin, HTMLStencilElement {}
  var HTMLIconLinkedinElement: {
    prototype: HTMLIconLinkedinElement;
    new (): HTMLIconLinkedinElement;
  };
  interface HTMLIconListElement extends Components.IconList, HTMLStencilElement {}
  var HTMLIconListElement: {
    prototype: HTMLIconListElement;
    new (): HTMLIconListElement;
  };
  interface HTMLIconLoaderElement extends Components.IconLoader, HTMLStencilElement {}
  var HTMLIconLoaderElement: {
    prototype: HTMLIconLoaderElement;
    new (): HTMLIconLoaderElement;
  };
  interface HTMLIconLockElement extends Components.IconLock, HTMLStencilElement {}
  var HTMLIconLockElement: {
    prototype: HTMLIconLockElement;
    new (): HTMLIconLockElement;
  };
  interface HTMLIconLogInElement extends Components.IconLogIn, HTMLStencilElement {}
  var HTMLIconLogInElement: {
    prototype: HTMLIconLogInElement;
    new (): HTMLIconLogInElement;
  };
  interface HTMLIconLogOutElement extends Components.IconLogOut, HTMLStencilElement {}
  var HTMLIconLogOutElement: {
    prototype: HTMLIconLogOutElement;
    new (): HTMLIconLogOutElement;
  };
  interface HTMLIconMailElement extends Components.IconMail, HTMLStencilElement {}
  var HTMLIconMailElement: {
    prototype: HTMLIconMailElement;
    new (): HTMLIconMailElement;
  };
  interface HTMLIconMapElement extends Components.IconMap, HTMLStencilElement {}
  var HTMLIconMapElement: {
    prototype: HTMLIconMapElement;
    new (): HTMLIconMapElement;
  };
  interface HTMLIconMapPinElement extends Components.IconMapPin, HTMLStencilElement {}
  var HTMLIconMapPinElement: {
    prototype: HTMLIconMapPinElement;
    new (): HTMLIconMapPinElement;
  };
  interface HTMLIconMaximizeElement extends Components.IconMaximize, HTMLStencilElement {}
  var HTMLIconMaximizeElement: {
    prototype: HTMLIconMaximizeElement;
    new (): HTMLIconMaximizeElement;
  };
  interface HTMLIconMaximize2Element extends Components.IconMaximize2, HTMLStencilElement {}
  var HTMLIconMaximize2Element: {
    prototype: HTMLIconMaximize2Element;
    new (): HTMLIconMaximize2Element;
  };
  interface HTMLIconMehElement extends Components.IconMeh, HTMLStencilElement {}
  var HTMLIconMehElement: {
    prototype: HTMLIconMehElement;
    new (): HTMLIconMehElement;
  };
  interface HTMLIconMenuElement extends Components.IconMenu, HTMLStencilElement {}
  var HTMLIconMenuElement: {
    prototype: HTMLIconMenuElement;
    new (): HTMLIconMenuElement;
  };
  interface HTMLIconMessageCircleElement extends Components.IconMessageCircle, HTMLStencilElement {}
  var HTMLIconMessageCircleElement: {
    prototype: HTMLIconMessageCircleElement;
    new (): HTMLIconMessageCircleElement;
  };
  interface HTMLIconMessageSquareElement extends Components.IconMessageSquare, HTMLStencilElement {}
  var HTMLIconMessageSquareElement: {
    prototype: HTMLIconMessageSquareElement;
    new (): HTMLIconMessageSquareElement;
  };
  interface HTMLIconMicElement extends Components.IconMic, HTMLStencilElement {}
  var HTMLIconMicElement: {
    prototype: HTMLIconMicElement;
    new (): HTMLIconMicElement;
  };
  interface HTMLIconMicOffElement extends Components.IconMicOff, HTMLStencilElement {}
  var HTMLIconMicOffElement: {
    prototype: HTMLIconMicOffElement;
    new (): HTMLIconMicOffElement;
  };
  interface HTMLIconMinimizeElement extends Components.IconMinimize, HTMLStencilElement {}
  var HTMLIconMinimizeElement: {
    prototype: HTMLIconMinimizeElement;
    new (): HTMLIconMinimizeElement;
  };
  interface HTMLIconMinimize2Element extends Components.IconMinimize2, HTMLStencilElement {}
  var HTMLIconMinimize2Element: {
    prototype: HTMLIconMinimize2Element;
    new (): HTMLIconMinimize2Element;
  };
  interface HTMLIconMinusElement extends Components.IconMinus, HTMLStencilElement {}
  var HTMLIconMinusElement: {
    prototype: HTMLIconMinusElement;
    new (): HTMLIconMinusElement;
  };
  interface HTMLIconMinusCircleElement extends Components.IconMinusCircle, HTMLStencilElement {}
  var HTMLIconMinusCircleElement: {
    prototype: HTMLIconMinusCircleElement;
    new (): HTMLIconMinusCircleElement;
  };
  interface HTMLIconMinusSquareElement extends Components.IconMinusSquare, HTMLStencilElement {}
  var HTMLIconMinusSquareElement: {
    prototype: HTMLIconMinusSquareElement;
    new (): HTMLIconMinusSquareElement;
  };
  interface HTMLIconMonitorElement extends Components.IconMonitor, HTMLStencilElement {}
  var HTMLIconMonitorElement: {
    prototype: HTMLIconMonitorElement;
    new (): HTMLIconMonitorElement;
  };
  interface HTMLIconMoonElement extends Components.IconMoon, HTMLStencilElement {}
  var HTMLIconMoonElement: {
    prototype: HTMLIconMoonElement;
    new (): HTMLIconMoonElement;
  };
  interface HTMLIconMoreHorizontalElement extends Components.IconMoreHorizontal, HTMLStencilElement {}
  var HTMLIconMoreHorizontalElement: {
    prototype: HTMLIconMoreHorizontalElement;
    new (): HTMLIconMoreHorizontalElement;
  };
  interface HTMLIconMoreVerticalElement extends Components.IconMoreVertical, HTMLStencilElement {}
  var HTMLIconMoreVerticalElement: {
    prototype: HTMLIconMoreVerticalElement;
    new (): HTMLIconMoreVerticalElement;
  };
  interface HTMLIconMousePointerElement extends Components.IconMousePointer, HTMLStencilElement {}
  var HTMLIconMousePointerElement: {
    prototype: HTMLIconMousePointerElement;
    new (): HTMLIconMousePointerElement;
  };
  interface HTMLIconMoveElement extends Components.IconMove, HTMLStencilElement {}
  var HTMLIconMoveElement: {
    prototype: HTMLIconMoveElement;
    new (): HTMLIconMoveElement;
  };
  interface HTMLIconMusicElement extends Components.IconMusic, HTMLStencilElement {}
  var HTMLIconMusicElement: {
    prototype: HTMLIconMusicElement;
    new (): HTMLIconMusicElement;
  };
  interface HTMLIconNavigationElement extends Components.IconNavigation, HTMLStencilElement {}
  var HTMLIconNavigationElement: {
    prototype: HTMLIconNavigationElement;
    new (): HTMLIconNavigationElement;
  };
  interface HTMLIconNavigation2Element extends Components.IconNavigation2, HTMLStencilElement {}
  var HTMLIconNavigation2Element: {
    prototype: HTMLIconNavigation2Element;
    new (): HTMLIconNavigation2Element;
  };
  interface HTMLIconOctagonElement extends Components.IconOctagon, HTMLStencilElement {}
  var HTMLIconOctagonElement: {
    prototype: HTMLIconOctagonElement;
    new (): HTMLIconOctagonElement;
  };
  interface HTMLIconPackageElement extends Components.IconPackage, HTMLStencilElement {}
  var HTMLIconPackageElement: {
    prototype: HTMLIconPackageElement;
    new (): HTMLIconPackageElement;
  };
  interface HTMLIconPaperclipElement extends Components.IconPaperclip, HTMLStencilElement {}
  var HTMLIconPaperclipElement: {
    prototype: HTMLIconPaperclipElement;
    new (): HTMLIconPaperclipElement;
  };
  interface HTMLIconPauseElement extends Components.IconPause, HTMLStencilElement {}
  var HTMLIconPauseElement: {
    prototype: HTMLIconPauseElement;
    new (): HTMLIconPauseElement;
  };
  interface HTMLIconPauseCircleElement extends Components.IconPauseCircle, HTMLStencilElement {}
  var HTMLIconPauseCircleElement: {
    prototype: HTMLIconPauseCircleElement;
    new (): HTMLIconPauseCircleElement;
  };
  interface HTMLIconPenToolElement extends Components.IconPenTool, HTMLStencilElement {}
  var HTMLIconPenToolElement: {
    prototype: HTMLIconPenToolElement;
    new (): HTMLIconPenToolElement;
  };
  interface HTMLIconPercentElement extends Components.IconPercent, HTMLStencilElement {}
  var HTMLIconPercentElement: {
    prototype: HTMLIconPercentElement;
    new (): HTMLIconPercentElement;
  };
  interface HTMLIconPhoneElement extends Components.IconPhone, HTMLStencilElement {}
  var HTMLIconPhoneElement: {
    prototype: HTMLIconPhoneElement;
    new (): HTMLIconPhoneElement;
  };
  interface HTMLIconPhoneCallElement extends Components.IconPhoneCall, HTMLStencilElement {}
  var HTMLIconPhoneCallElement: {
    prototype: HTMLIconPhoneCallElement;
    new (): HTMLIconPhoneCallElement;
  };
  interface HTMLIconPhoneForwardedElement extends Components.IconPhoneForwarded, HTMLStencilElement {}
  var HTMLIconPhoneForwardedElement: {
    prototype: HTMLIconPhoneForwardedElement;
    new (): HTMLIconPhoneForwardedElement;
  };
  interface HTMLIconPhoneIncomingElement extends Components.IconPhoneIncoming, HTMLStencilElement {}
  var HTMLIconPhoneIncomingElement: {
    prototype: HTMLIconPhoneIncomingElement;
    new (): HTMLIconPhoneIncomingElement;
  };
  interface HTMLIconPhoneMissedElement extends Components.IconPhoneMissed, HTMLStencilElement {}
  var HTMLIconPhoneMissedElement: {
    prototype: HTMLIconPhoneMissedElement;
    new (): HTMLIconPhoneMissedElement;
  };
  interface HTMLIconPhoneOffElement extends Components.IconPhoneOff, HTMLStencilElement {}
  var HTMLIconPhoneOffElement: {
    prototype: HTMLIconPhoneOffElement;
    new (): HTMLIconPhoneOffElement;
  };
  interface HTMLIconPhoneOutgoingElement extends Components.IconPhoneOutgoing, HTMLStencilElement {}
  var HTMLIconPhoneOutgoingElement: {
    prototype: HTMLIconPhoneOutgoingElement;
    new (): HTMLIconPhoneOutgoingElement;
  };
  interface HTMLIconPieChartElement extends Components.IconPieChart, HTMLStencilElement {}
  var HTMLIconPieChartElement: {
    prototype: HTMLIconPieChartElement;
    new (): HTMLIconPieChartElement;
  };
  interface HTMLIconPlayElement extends Components.IconPlay, HTMLStencilElement {}
  var HTMLIconPlayElement: {
    prototype: HTMLIconPlayElement;
    new (): HTMLIconPlayElement;
  };
  interface HTMLIconPlayCircleElement extends Components.IconPlayCircle, HTMLStencilElement {}
  var HTMLIconPlayCircleElement: {
    prototype: HTMLIconPlayCircleElement;
    new (): HTMLIconPlayCircleElement;
  };
  interface HTMLIconPlusElement extends Components.IconPlus, HTMLStencilElement {}
  var HTMLIconPlusElement: {
    prototype: HTMLIconPlusElement;
    new (): HTMLIconPlusElement;
  };
  interface HTMLIconPlusCircleElement extends Components.IconPlusCircle, HTMLStencilElement {}
  var HTMLIconPlusCircleElement: {
    prototype: HTMLIconPlusCircleElement;
    new (): HTMLIconPlusCircleElement;
  };
  interface HTMLIconPlusSquareElement extends Components.IconPlusSquare, HTMLStencilElement {}
  var HTMLIconPlusSquareElement: {
    prototype: HTMLIconPlusSquareElement;
    new (): HTMLIconPlusSquareElement;
  };
  interface HTMLIconPocketElement extends Components.IconPocket, HTMLStencilElement {}
  var HTMLIconPocketElement: {
    prototype: HTMLIconPocketElement;
    new (): HTMLIconPocketElement;
  };
  interface HTMLIconPowerElement extends Components.IconPower, HTMLStencilElement {}
  var HTMLIconPowerElement: {
    prototype: HTMLIconPowerElement;
    new (): HTMLIconPowerElement;
  };
  interface HTMLIconPrinterElement extends Components.IconPrinter, HTMLStencilElement {}
  var HTMLIconPrinterElement: {
    prototype: HTMLIconPrinterElement;
    new (): HTMLIconPrinterElement;
  };
  interface HTMLIconRadioElement extends Components.IconRadio, HTMLStencilElement {}
  var HTMLIconRadioElement: {
    prototype: HTMLIconRadioElement;
    new (): HTMLIconRadioElement;
  };
  interface HTMLIconRefreshCcwElement extends Components.IconRefreshCcw, HTMLStencilElement {}
  var HTMLIconRefreshCcwElement: {
    prototype: HTMLIconRefreshCcwElement;
    new (): HTMLIconRefreshCcwElement;
  };
  interface HTMLIconRefreshCwElement extends Components.IconRefreshCw, HTMLStencilElement {}
  var HTMLIconRefreshCwElement: {
    prototype: HTMLIconRefreshCwElement;
    new (): HTMLIconRefreshCwElement;
  };
  interface HTMLIconRepeatElement extends Components.IconRepeat, HTMLStencilElement {}
  var HTMLIconRepeatElement: {
    prototype: HTMLIconRepeatElement;
    new (): HTMLIconRepeatElement;
  };
  interface HTMLIconRewindElement extends Components.IconRewind, HTMLStencilElement {}
  var HTMLIconRewindElement: {
    prototype: HTMLIconRewindElement;
    new (): HTMLIconRewindElement;
  };
  interface HTMLIconRotateCcwElement extends Components.IconRotateCcw, HTMLStencilElement {}
  var HTMLIconRotateCcwElement: {
    prototype: HTMLIconRotateCcwElement;
    new (): HTMLIconRotateCcwElement;
  };
  interface HTMLIconRotateCwElement extends Components.IconRotateCw, HTMLStencilElement {}
  var HTMLIconRotateCwElement: {
    prototype: HTMLIconRotateCwElement;
    new (): HTMLIconRotateCwElement;
  };
  interface HTMLIconRssElement extends Components.IconRss, HTMLStencilElement {}
  var HTMLIconRssElement: {
    prototype: HTMLIconRssElement;
    new (): HTMLIconRssElement;
  };
  interface HTMLIconSaveElement extends Components.IconSave, HTMLStencilElement {}
  var HTMLIconSaveElement: {
    prototype: HTMLIconSaveElement;
    new (): HTMLIconSaveElement;
  };
  interface HTMLIconScissorsElement extends Components.IconScissors, HTMLStencilElement {}
  var HTMLIconScissorsElement: {
    prototype: HTMLIconScissorsElement;
    new (): HTMLIconScissorsElement;
  };
  interface HTMLIconSearchElement extends Components.IconSearch, HTMLStencilElement {}
  var HTMLIconSearchElement: {
    prototype: HTMLIconSearchElement;
    new (): HTMLIconSearchElement;
  };
  interface HTMLIconSendElement extends Components.IconSend, HTMLStencilElement {}
  var HTMLIconSendElement: {
    prototype: HTMLIconSendElement;
    new (): HTMLIconSendElement;
  };
  interface HTMLIconServerElement extends Components.IconServer, HTMLStencilElement {}
  var HTMLIconServerElement: {
    prototype: HTMLIconServerElement;
    new (): HTMLIconServerElement;
  };
  interface HTMLIconSettingsElement extends Components.IconSettings, HTMLStencilElement {}
  var HTMLIconSettingsElement: {
    prototype: HTMLIconSettingsElement;
    new (): HTMLIconSettingsElement;
  };
  interface HTMLIconShareElement extends Components.IconShare, HTMLStencilElement {}
  var HTMLIconShareElement: {
    prototype: HTMLIconShareElement;
    new (): HTMLIconShareElement;
  };
  interface HTMLIconShare2Element extends Components.IconShare2, HTMLStencilElement {}
  var HTMLIconShare2Element: {
    prototype: HTMLIconShare2Element;
    new (): HTMLIconShare2Element;
  };
  interface HTMLIconShieldElement extends Components.IconShield, HTMLStencilElement {}
  var HTMLIconShieldElement: {
    prototype: HTMLIconShieldElement;
    new (): HTMLIconShieldElement;
  };
  interface HTMLIconShieldOffElement extends Components.IconShieldOff, HTMLStencilElement {}
  var HTMLIconShieldOffElement: {
    prototype: HTMLIconShieldOffElement;
    new (): HTMLIconShieldOffElement;
  };
  interface HTMLIconShoppingBagElement extends Components.IconShoppingBag, HTMLStencilElement {}
  var HTMLIconShoppingBagElement: {
    prototype: HTMLIconShoppingBagElement;
    new (): HTMLIconShoppingBagElement;
  };
  interface HTMLIconShoppingCartElement extends Components.IconShoppingCart, HTMLStencilElement {}
  var HTMLIconShoppingCartElement: {
    prototype: HTMLIconShoppingCartElement;
    new (): HTMLIconShoppingCartElement;
  };
  interface HTMLIconShuffleElement extends Components.IconShuffle, HTMLStencilElement {}
  var HTMLIconShuffleElement: {
    prototype: HTMLIconShuffleElement;
    new (): HTMLIconShuffleElement;
  };
  interface HTMLIconSidebarElement extends Components.IconSidebar, HTMLStencilElement {}
  var HTMLIconSidebarElement: {
    prototype: HTMLIconSidebarElement;
    new (): HTMLIconSidebarElement;
  };
  interface HTMLIconSkipBackElement extends Components.IconSkipBack, HTMLStencilElement {}
  var HTMLIconSkipBackElement: {
    prototype: HTMLIconSkipBackElement;
    new (): HTMLIconSkipBackElement;
  };
  interface HTMLIconSkipForwardElement extends Components.IconSkipForward, HTMLStencilElement {}
  var HTMLIconSkipForwardElement: {
    prototype: HTMLIconSkipForwardElement;
    new (): HTMLIconSkipForwardElement;
  };
  interface HTMLIconSlackElement extends Components.IconSlack, HTMLStencilElement {}
  var HTMLIconSlackElement: {
    prototype: HTMLIconSlackElement;
    new (): HTMLIconSlackElement;
  };
  interface HTMLIconSlashElement extends Components.IconSlash, HTMLStencilElement {}
  var HTMLIconSlashElement: {
    prototype: HTMLIconSlashElement;
    new (): HTMLIconSlashElement;
  };
  interface HTMLIconSlidersElement extends Components.IconSliders, HTMLStencilElement {}
  var HTMLIconSlidersElement: {
    prototype: HTMLIconSlidersElement;
    new (): HTMLIconSlidersElement;
  };
  interface HTMLIconSmartphoneElement extends Components.IconSmartphone, HTMLStencilElement {}
  var HTMLIconSmartphoneElement: {
    prototype: HTMLIconSmartphoneElement;
    new (): HTMLIconSmartphoneElement;
  };
  interface HTMLIconSmileElement extends Components.IconSmile, HTMLStencilElement {}
  var HTMLIconSmileElement: {
    prototype: HTMLIconSmileElement;
    new (): HTMLIconSmileElement;
  };
  interface HTMLIconSpeakerElement extends Components.IconSpeaker, HTMLStencilElement {}
  var HTMLIconSpeakerElement: {
    prototype: HTMLIconSpeakerElement;
    new (): HTMLIconSpeakerElement;
  };
  interface HTMLIconSquareElement extends Components.IconSquare, HTMLStencilElement {}
  var HTMLIconSquareElement: {
    prototype: HTMLIconSquareElement;
    new (): HTMLIconSquareElement;
  };
  interface HTMLIconStarElement extends Components.IconStar, HTMLStencilElement {}
  var HTMLIconStarElement: {
    prototype: HTMLIconStarElement;
    new (): HTMLIconStarElement;
  };
  interface HTMLIconStopCircleElement extends Components.IconStopCircle, HTMLStencilElement {}
  var HTMLIconStopCircleElement: {
    prototype: HTMLIconStopCircleElement;
    new (): HTMLIconStopCircleElement;
  };
  interface HTMLIconSunElement extends Components.IconSun, HTMLStencilElement {}
  var HTMLIconSunElement: {
    prototype: HTMLIconSunElement;
    new (): HTMLIconSunElement;
  };
  interface HTMLIconSunriseElement extends Components.IconSunrise, HTMLStencilElement {}
  var HTMLIconSunriseElement: {
    prototype: HTMLIconSunriseElement;
    new (): HTMLIconSunriseElement;
  };
  interface HTMLIconSunsetElement extends Components.IconSunset, HTMLStencilElement {}
  var HTMLIconSunsetElement: {
    prototype: HTMLIconSunsetElement;
    new (): HTMLIconSunsetElement;
  };
  interface HTMLIconTableElement extends Components.IconTable, HTMLStencilElement {}
  var HTMLIconTableElement: {
    prototype: HTMLIconTableElement;
    new (): HTMLIconTableElement;
  };
  interface HTMLIconTabletElement extends Components.IconTablet, HTMLStencilElement {}
  var HTMLIconTabletElement: {
    prototype: HTMLIconTabletElement;
    new (): HTMLIconTabletElement;
  };
  interface HTMLIconTagElement extends Components.IconTag, HTMLStencilElement {}
  var HTMLIconTagElement: {
    prototype: HTMLIconTagElement;
    new (): HTMLIconTagElement;
  };
  interface HTMLIconTargetElement extends Components.IconTarget, HTMLStencilElement {}
  var HTMLIconTargetElement: {
    prototype: HTMLIconTargetElement;
    new (): HTMLIconTargetElement;
  };
  interface HTMLIconTerminalElement extends Components.IconTerminal, HTMLStencilElement {}
  var HTMLIconTerminalElement: {
    prototype: HTMLIconTerminalElement;
    new (): HTMLIconTerminalElement;
  };
  interface HTMLIconThermometerElement extends Components.IconThermometer, HTMLStencilElement {}
  var HTMLIconThermometerElement: {
    prototype: HTMLIconThermometerElement;
    new (): HTMLIconThermometerElement;
  };
  interface HTMLIconThumbsDownElement extends Components.IconThumbsDown, HTMLStencilElement {}
  var HTMLIconThumbsDownElement: {
    prototype: HTMLIconThumbsDownElement;
    new (): HTMLIconThumbsDownElement;
  };
  interface HTMLIconThumbsUpElement extends Components.IconThumbsUp, HTMLStencilElement {}
  var HTMLIconThumbsUpElement: {
    prototype: HTMLIconThumbsUpElement;
    new (): HTMLIconThumbsUpElement;
  };
  interface HTMLIconToggleLeftElement extends Components.IconToggleLeft, HTMLStencilElement {}
  var HTMLIconToggleLeftElement: {
    prototype: HTMLIconToggleLeftElement;
    new (): HTMLIconToggleLeftElement;
  };
  interface HTMLIconToggleRightElement extends Components.IconToggleRight, HTMLStencilElement {}
  var HTMLIconToggleRightElement: {
    prototype: HTMLIconToggleRightElement;
    new (): HTMLIconToggleRightElement;
  };
  interface HTMLIconToolElement extends Components.IconTool, HTMLStencilElement {}
  var HTMLIconToolElement: {
    prototype: HTMLIconToolElement;
    new (): HTMLIconToolElement;
  };
  interface HTMLIconTrashElement extends Components.IconTrash, HTMLStencilElement {}
  var HTMLIconTrashElement: {
    prototype: HTMLIconTrashElement;
    new (): HTMLIconTrashElement;
  };
  interface HTMLIconTrash2Element extends Components.IconTrash2, HTMLStencilElement {}
  var HTMLIconTrash2Element: {
    prototype: HTMLIconTrash2Element;
    new (): HTMLIconTrash2Element;
  };
  interface HTMLIconTrelloElement extends Components.IconTrello, HTMLStencilElement {}
  var HTMLIconTrelloElement: {
    prototype: HTMLIconTrelloElement;
    new (): HTMLIconTrelloElement;
  };
  interface HTMLIconTrendingDownElement extends Components.IconTrendingDown, HTMLStencilElement {}
  var HTMLIconTrendingDownElement: {
    prototype: HTMLIconTrendingDownElement;
    new (): HTMLIconTrendingDownElement;
  };
  interface HTMLIconTrendingUpElement extends Components.IconTrendingUp, HTMLStencilElement {}
  var HTMLIconTrendingUpElement: {
    prototype: HTMLIconTrendingUpElement;
    new (): HTMLIconTrendingUpElement;
  };
  interface HTMLIconTriangleElement extends Components.IconTriangle, HTMLStencilElement {}
  var HTMLIconTriangleElement: {
    prototype: HTMLIconTriangleElement;
    new (): HTMLIconTriangleElement;
  };
  interface HTMLIconTruckElement extends Components.IconTruck, HTMLStencilElement {}
  var HTMLIconTruckElement: {
    prototype: HTMLIconTruckElement;
    new (): HTMLIconTruckElement;
  };
  interface HTMLIconTvElement extends Components.IconTv, HTMLStencilElement {}
  var HTMLIconTvElement: {
    prototype: HTMLIconTvElement;
    new (): HTMLIconTvElement;
  };
  interface HTMLIconTwitchElement extends Components.IconTwitch, HTMLStencilElement {}
  var HTMLIconTwitchElement: {
    prototype: HTMLIconTwitchElement;
    new (): HTMLIconTwitchElement;
  };
  interface HTMLIconTwitterElement extends Components.IconTwitter, HTMLStencilElement {}
  var HTMLIconTwitterElement: {
    prototype: HTMLIconTwitterElement;
    new (): HTMLIconTwitterElement;
  };
  interface HTMLIconTypeElement extends Components.IconType, HTMLStencilElement {}
  var HTMLIconTypeElement: {
    prototype: HTMLIconTypeElement;
    new (): HTMLIconTypeElement;
  };
  interface HTMLIconUmbrellaElement extends Components.IconUmbrella, HTMLStencilElement {}
  var HTMLIconUmbrellaElement: {
    prototype: HTMLIconUmbrellaElement;
    new (): HTMLIconUmbrellaElement;
  };
  interface HTMLIconUnderlineElement extends Components.IconUnderline, HTMLStencilElement {}
  var HTMLIconUnderlineElement: {
    prototype: HTMLIconUnderlineElement;
    new (): HTMLIconUnderlineElement;
  };
  interface HTMLIconUnlockElement extends Components.IconUnlock, HTMLStencilElement {}
  var HTMLIconUnlockElement: {
    prototype: HTMLIconUnlockElement;
    new (): HTMLIconUnlockElement;
  };
  interface HTMLIconUploadElement extends Components.IconUpload, HTMLStencilElement {}
  var HTMLIconUploadElement: {
    prototype: HTMLIconUploadElement;
    new (): HTMLIconUploadElement;
  };
  interface HTMLIconUploadCloudElement extends Components.IconUploadCloud, HTMLStencilElement {}
  var HTMLIconUploadCloudElement: {
    prototype: HTMLIconUploadCloudElement;
    new (): HTMLIconUploadCloudElement;
  };
  interface HTMLIconUserElement extends Components.IconUser, HTMLStencilElement {}
  var HTMLIconUserElement: {
    prototype: HTMLIconUserElement;
    new (): HTMLIconUserElement;
  };
  interface HTMLIconUserCheckElement extends Components.IconUserCheck, HTMLStencilElement {}
  var HTMLIconUserCheckElement: {
    prototype: HTMLIconUserCheckElement;
    new (): HTMLIconUserCheckElement;
  };
  interface HTMLIconUserMinusElement extends Components.IconUserMinus, HTMLStencilElement {}
  var HTMLIconUserMinusElement: {
    prototype: HTMLIconUserMinusElement;
    new (): HTMLIconUserMinusElement;
  };
  interface HTMLIconUserPlusElement extends Components.IconUserPlus, HTMLStencilElement {}
  var HTMLIconUserPlusElement: {
    prototype: HTMLIconUserPlusElement;
    new (): HTMLIconUserPlusElement;
  };
  interface HTMLIconUserXElement extends Components.IconUserX, HTMLStencilElement {}
  var HTMLIconUserXElement: {
    prototype: HTMLIconUserXElement;
    new (): HTMLIconUserXElement;
  };
  interface HTMLIconUsersElement extends Components.IconUsers, HTMLStencilElement {}
  var HTMLIconUsersElement: {
    prototype: HTMLIconUsersElement;
    new (): HTMLIconUsersElement;
  };
  interface HTMLIconVideoElement extends Components.IconVideo, HTMLStencilElement {}
  var HTMLIconVideoElement: {
    prototype: HTMLIconVideoElement;
    new (): HTMLIconVideoElement;
  };
  interface HTMLIconVideoOffElement extends Components.IconVideoOff, HTMLStencilElement {}
  var HTMLIconVideoOffElement: {
    prototype: HTMLIconVideoOffElement;
    new (): HTMLIconVideoOffElement;
  };
  interface HTMLIconVoicemailElement extends Components.IconVoicemail, HTMLStencilElement {}
  var HTMLIconVoicemailElement: {
    prototype: HTMLIconVoicemailElement;
    new (): HTMLIconVoicemailElement;
  };
  interface HTMLIconVolumeElement extends Components.IconVolume, HTMLStencilElement {}
  var HTMLIconVolumeElement: {
    prototype: HTMLIconVolumeElement;
    new (): HTMLIconVolumeElement;
  };
  interface HTMLIconVolume1Element extends Components.IconVolume1, HTMLStencilElement {}
  var HTMLIconVolume1Element: {
    prototype: HTMLIconVolume1Element;
    new (): HTMLIconVolume1Element;
  };
  interface HTMLIconVolume2Element extends Components.IconVolume2, HTMLStencilElement {}
  var HTMLIconVolume2Element: {
    prototype: HTMLIconVolume2Element;
    new (): HTMLIconVolume2Element;
  };
  interface HTMLIconVolumeXElement extends Components.IconVolumeX, HTMLStencilElement {}
  var HTMLIconVolumeXElement: {
    prototype: HTMLIconVolumeXElement;
    new (): HTMLIconVolumeXElement;
  };
  interface HTMLIconWatchElement extends Components.IconWatch, HTMLStencilElement {}
  var HTMLIconWatchElement: {
    prototype: HTMLIconWatchElement;
    new (): HTMLIconWatchElement;
  };
  interface HTMLIconWifiElement extends Components.IconWifi, HTMLStencilElement {}
  var HTMLIconWifiElement: {
    prototype: HTMLIconWifiElement;
    new (): HTMLIconWifiElement;
  };
  interface HTMLIconWifiOffElement extends Components.IconWifiOff, HTMLStencilElement {}
  var HTMLIconWifiOffElement: {
    prototype: HTMLIconWifiOffElement;
    new (): HTMLIconWifiOffElement;
  };
  interface HTMLIconWindElement extends Components.IconWind, HTMLStencilElement {}
  var HTMLIconWindElement: {
    prototype: HTMLIconWindElement;
    new (): HTMLIconWindElement;
  };
  interface HTMLIconXElement extends Components.IconX, HTMLStencilElement {}
  var HTMLIconXElement: {
    prototype: HTMLIconXElement;
    new (): HTMLIconXElement;
  };
  interface HTMLIconXCircleElement extends Components.IconXCircle, HTMLStencilElement {}
  var HTMLIconXCircleElement: {
    prototype: HTMLIconXCircleElement;
    new (): HTMLIconXCircleElement;
  };
  interface HTMLIconXOctagonElement extends Components.IconXOctagon, HTMLStencilElement {}
  var HTMLIconXOctagonElement: {
    prototype: HTMLIconXOctagonElement;
    new (): HTMLIconXOctagonElement;
  };
  interface HTMLIconXSquareElement extends Components.IconXSquare, HTMLStencilElement {}
  var HTMLIconXSquareElement: {
    prototype: HTMLIconXSquareElement;
    new (): HTMLIconXSquareElement;
  };
  interface HTMLIconYoutubeElement extends Components.IconYoutube, HTMLStencilElement {}
  var HTMLIconYoutubeElement: {
    prototype: HTMLIconYoutubeElement;
    new (): HTMLIconYoutubeElement;
  };
  interface HTMLIconZapElement extends Components.IconZap, HTMLStencilElement {}
  var HTMLIconZapElement: {
    prototype: HTMLIconZapElement;
    new (): HTMLIconZapElement;
  };
  interface HTMLIconZapOffElement extends Components.IconZapOff, HTMLStencilElement {}
  var HTMLIconZapOffElement: {
    prototype: HTMLIconZapOffElement;
    new (): HTMLIconZapOffElement;
  };
  interface HTMLIconZoomInElement extends Components.IconZoomIn, HTMLStencilElement {}
  var HTMLIconZoomInElement: {
    prototype: HTMLIconZoomInElement;
    new (): HTMLIconZoomInElement;
  };
  interface HTMLIconZoomOutElement extends Components.IconZoomOut, HTMLStencilElement {}
  var HTMLIconZoomOutElement: {
    prototype: HTMLIconZoomOutElement;
    new (): HTMLIconZoomOutElement;
  };
  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'icon-activity': HTMLIconActivityElement;
    'icon-airplay': HTMLIconAirplayElement;
    'icon-alert-circle': HTMLIconAlertCircleElement;
    'icon-alert-octagon': HTMLIconAlertOctagonElement;
    'icon-alert-triangle': HTMLIconAlertTriangleElement;
    'icon-align-center': HTMLIconAlignCenterElement;
    'icon-align-justify': HTMLIconAlignJustifyElement;
    'icon-align-left': HTMLIconAlignLeftElement;
    'icon-align-right': HTMLIconAlignRightElement;
    'icon-anchor': HTMLIconAnchorElement;
    'icon-aperture': HTMLIconApertureElement;
    'icon-archive': HTMLIconArchiveElement;
    'icon-arrow-down': HTMLIconArrowDownElement;
    'icon-arrow-down-circle': HTMLIconArrowDownCircleElement;
    'icon-arrow-down-left': HTMLIconArrowDownLeftElement;
    'icon-arrow-down-right': HTMLIconArrowDownRightElement;
    'icon-arrow-left': HTMLIconArrowLeftElement;
    'icon-arrow-left-circle': HTMLIconArrowLeftCircleElement;
    'icon-arrow-right': HTMLIconArrowRightElement;
    'icon-arrow-right-circle': HTMLIconArrowRightCircleElement;
    'icon-arrow-up': HTMLIconArrowUpElement;
    'icon-arrow-up-circle': HTMLIconArrowUpCircleElement;
    'icon-arrow-up-left': HTMLIconArrowUpLeftElement;
    'icon-arrow-up-right': HTMLIconArrowUpRightElement;
    'icon-at-sign': HTMLIconAtSignElement;
    'icon-award': HTMLIconAwardElement;
    'icon-bar-chart': HTMLIconBarChartElement;
    'icon-bar-chart-2': HTMLIconBarChart2Element;
    'icon-battery': HTMLIconBatteryElement;
    'icon-battery-charging': HTMLIconBatteryChargingElement;
    'icon-bell': HTMLIconBellElement;
    'icon-bell-off': HTMLIconBellOffElement;
    'icon-bluetooth': HTMLIconBluetoothElement;
    'icon-bold': HTMLIconBoldElement;
    'icon-book': HTMLIconBookElement;
    'icon-book-open': HTMLIconBookOpenElement;
    'icon-bookmark': HTMLIconBookmarkElement;
    'icon-box': HTMLIconBoxElement;
    'icon-briefcase': HTMLIconBriefcaseElement;
    'icon-calendar': HTMLIconCalendarElement;
    'icon-camera': HTMLIconCameraElement;
    'icon-camera-off': HTMLIconCameraOffElement;
    'icon-cast': HTMLIconCastElement;
    'icon-check': HTMLIconCheckElement;
    'icon-check-circle': HTMLIconCheckCircleElement;
    'icon-check-square': HTMLIconCheckSquareElement;
    'icon-chevron-down': HTMLIconChevronDownElement;
    'icon-chevron-left': HTMLIconChevronLeftElement;
    'icon-chevron-right': HTMLIconChevronRightElement;
    'icon-chevron-up': HTMLIconChevronUpElement;
    'icon-chevrons-down': HTMLIconChevronsDownElement;
    'icon-chevrons-left': HTMLIconChevronsLeftElement;
    'icon-chevrons-right': HTMLIconChevronsRightElement;
    'icon-chevrons-up': HTMLIconChevronsUpElement;
    'icon-chrome': HTMLIconChromeElement;
    'icon-circle': HTMLIconCircleElement;
    'icon-clipboard': HTMLIconClipboardElement;
    'icon-clock': HTMLIconClockElement;
    'icon-cloud': HTMLIconCloudElement;
    'icon-cloud-drizzle': HTMLIconCloudDrizzleElement;
    'icon-cloud-lightning': HTMLIconCloudLightningElement;
    'icon-cloud-off': HTMLIconCloudOffElement;
    'icon-cloud-rain': HTMLIconCloudRainElement;
    'icon-cloud-snow': HTMLIconCloudSnowElement;
    'icon-code': HTMLIconCodeElement;
    'icon-codepen': HTMLIconCodepenElement;
    'icon-codesandbox': HTMLIconCodesandboxElement;
    'icon-coffee': HTMLIconCoffeeElement;
    'icon-columns': HTMLIconColumnsElement;
    'icon-command': HTMLIconCommandElement;
    'icon-compass': HTMLIconCompassElement;
    'icon-copy': HTMLIconCopyElement;
    'icon-corner-down-left': HTMLIconCornerDownLeftElement;
    'icon-corner-down-right': HTMLIconCornerDownRightElement;
    'icon-corner-left-down': HTMLIconCornerLeftDownElement;
    'icon-corner-left-up': HTMLIconCornerLeftUpElement;
    'icon-corner-right-down': HTMLIconCornerRightDownElement;
    'icon-corner-right-up': HTMLIconCornerRightUpElement;
    'icon-corner-up-left': HTMLIconCornerUpLeftElement;
    'icon-corner-up-right': HTMLIconCornerUpRightElement;
    'icon-cpu': HTMLIconCpuElement;
    'icon-credit-card': HTMLIconCreditCardElement;
    'icon-crop': HTMLIconCropElement;
    'icon-crosshair': HTMLIconCrosshairElement;
    'icon-database': HTMLIconDatabaseElement;
    'icon-delete': HTMLIconDeleteElement;
    'icon-disc': HTMLIconDiscElement;
    'icon-divide': HTMLIconDivideElement;
    'icon-divide-circle': HTMLIconDivideCircleElement;
    'icon-divide-square': HTMLIconDivideSquareElement;
    'icon-dollar-sign': HTMLIconDollarSignElement;
    'icon-download': HTMLIconDownloadElement;
    'icon-download-cloud': HTMLIconDownloadCloudElement;
    'icon-dribbble': HTMLIconDribbbleElement;
    'icon-droplet': HTMLIconDropletElement;
    'icon-edit': HTMLIconEditElement;
    'icon-edit-2': HTMLIconEdit2Element;
    'icon-edit-3': HTMLIconEdit3Element;
    'icon-external-link': HTMLIconExternalLinkElement;
    'icon-eye': HTMLIconEyeElement;
    'icon-eye-off': HTMLIconEyeOffElement;
    'icon-facebook': HTMLIconFacebookElement;
    'icon-fast-forward': HTMLIconFastForwardElement;
    'icon-feather': HTMLIconFeatherElement;
    'icon-figma': HTMLIconFigmaElement;
    'icon-file': HTMLIconFileElement;
    'icon-file-minus': HTMLIconFileMinusElement;
    'icon-file-plus': HTMLIconFilePlusElement;
    'icon-file-text': HTMLIconFileTextElement;
    'icon-film': HTMLIconFilmElement;
    'icon-filter': HTMLIconFilterElement;
    'icon-flag': HTMLIconFlagElement;
    'icon-folder': HTMLIconFolderElement;
    'icon-folder-minus': HTMLIconFolderMinusElement;
    'icon-folder-plus': HTMLIconFolderPlusElement;
    'icon-framer': HTMLIconFramerElement;
    'icon-frown': HTMLIconFrownElement;
    'icon-gift': HTMLIconGiftElement;
    'icon-git-branch': HTMLIconGitBranchElement;
    'icon-git-commit': HTMLIconGitCommitElement;
    'icon-git-merge': HTMLIconGitMergeElement;
    'icon-git-pull-request': HTMLIconGitPullRequestElement;
    'icon-github': HTMLIconGithubElement;
    'icon-gitlab': HTMLIconGitlabElement;
    'icon-globe': HTMLIconGlobeElement;
    'icon-grid': HTMLIconGridElement;
    'icon-hard-drive': HTMLIconHardDriveElement;
    'icon-hash': HTMLIconHashElement;
    'icon-headphones': HTMLIconHeadphonesElement;
    'icon-heart': HTMLIconHeartElement;
    'icon-help-circle': HTMLIconHelpCircleElement;
    'icon-hexagon': HTMLIconHexagonElement;
    'icon-home': HTMLIconHomeElement;
    'icon-image': HTMLIconImageElement;
    'icon-inbox': HTMLIconInboxElement;
    'icon-info': HTMLIconInfoElement;
    'icon-instagram': HTMLIconInstagramElement;
    'icon-italic': HTMLIconItalicElement;
    'icon-key': HTMLIconKeyElement;
    'icon-layers': HTMLIconLayersElement;
    'icon-layout': HTMLIconLayoutElement;
    'icon-life-buoy': HTMLIconLifeBuoyElement;
    'icon-link': HTMLIconLinkElement;
    'icon-link-2': HTMLIconLink2Element;
    'icon-linkedin': HTMLIconLinkedinElement;
    'icon-list': HTMLIconListElement;
    'icon-loader': HTMLIconLoaderElement;
    'icon-lock': HTMLIconLockElement;
    'icon-log-in': HTMLIconLogInElement;
    'icon-log-out': HTMLIconLogOutElement;
    'icon-mail': HTMLIconMailElement;
    'icon-map': HTMLIconMapElement;
    'icon-map-pin': HTMLIconMapPinElement;
    'icon-maximize': HTMLIconMaximizeElement;
    'icon-maximize-2': HTMLIconMaximize2Element;
    'icon-meh': HTMLIconMehElement;
    'icon-menu': HTMLIconMenuElement;
    'icon-message-circle': HTMLIconMessageCircleElement;
    'icon-message-square': HTMLIconMessageSquareElement;
    'icon-mic': HTMLIconMicElement;
    'icon-mic-off': HTMLIconMicOffElement;
    'icon-minimize': HTMLIconMinimizeElement;
    'icon-minimize-2': HTMLIconMinimize2Element;
    'icon-minus': HTMLIconMinusElement;
    'icon-minus-circle': HTMLIconMinusCircleElement;
    'icon-minus-square': HTMLIconMinusSquareElement;
    'icon-monitor': HTMLIconMonitorElement;
    'icon-moon': HTMLIconMoonElement;
    'icon-more-horizontal': HTMLIconMoreHorizontalElement;
    'icon-more-vertical': HTMLIconMoreVerticalElement;
    'icon-mouse-pointer': HTMLIconMousePointerElement;
    'icon-move': HTMLIconMoveElement;
    'icon-music': HTMLIconMusicElement;
    'icon-navigation': HTMLIconNavigationElement;
    'icon-navigation-2': HTMLIconNavigation2Element;
    'icon-octagon': HTMLIconOctagonElement;
    'icon-package': HTMLIconPackageElement;
    'icon-paperclip': HTMLIconPaperclipElement;
    'icon-pause': HTMLIconPauseElement;
    'icon-pause-circle': HTMLIconPauseCircleElement;
    'icon-pen-tool': HTMLIconPenToolElement;
    'icon-percent': HTMLIconPercentElement;
    'icon-phone': HTMLIconPhoneElement;
    'icon-phone-call': HTMLIconPhoneCallElement;
    'icon-phone-forwarded': HTMLIconPhoneForwardedElement;
    'icon-phone-incoming': HTMLIconPhoneIncomingElement;
    'icon-phone-missed': HTMLIconPhoneMissedElement;
    'icon-phone-off': HTMLIconPhoneOffElement;
    'icon-phone-outgoing': HTMLIconPhoneOutgoingElement;
    'icon-pie-chart': HTMLIconPieChartElement;
    'icon-play': HTMLIconPlayElement;
    'icon-play-circle': HTMLIconPlayCircleElement;
    'icon-plus': HTMLIconPlusElement;
    'icon-plus-circle': HTMLIconPlusCircleElement;
    'icon-plus-square': HTMLIconPlusSquareElement;
    'icon-pocket': HTMLIconPocketElement;
    'icon-power': HTMLIconPowerElement;
    'icon-printer': HTMLIconPrinterElement;
    'icon-radio': HTMLIconRadioElement;
    'icon-refresh-ccw': HTMLIconRefreshCcwElement;
    'icon-refresh-cw': HTMLIconRefreshCwElement;
    'icon-repeat': HTMLIconRepeatElement;
    'icon-rewind': HTMLIconRewindElement;
    'icon-rotate-ccw': HTMLIconRotateCcwElement;
    'icon-rotate-cw': HTMLIconRotateCwElement;
    'icon-rss': HTMLIconRssElement;
    'icon-save': HTMLIconSaveElement;
    'icon-scissors': HTMLIconScissorsElement;
    'icon-search': HTMLIconSearchElement;
    'icon-send': HTMLIconSendElement;
    'icon-server': HTMLIconServerElement;
    'icon-settings': HTMLIconSettingsElement;
    'icon-share': HTMLIconShareElement;
    'icon-share-2': HTMLIconShare2Element;
    'icon-shield': HTMLIconShieldElement;
    'icon-shield-off': HTMLIconShieldOffElement;
    'icon-shopping-bag': HTMLIconShoppingBagElement;
    'icon-shopping-cart': HTMLIconShoppingCartElement;
    'icon-shuffle': HTMLIconShuffleElement;
    'icon-sidebar': HTMLIconSidebarElement;
    'icon-skip-back': HTMLIconSkipBackElement;
    'icon-skip-forward': HTMLIconSkipForwardElement;
    'icon-slack': HTMLIconSlackElement;
    'icon-slash': HTMLIconSlashElement;
    'icon-sliders': HTMLIconSlidersElement;
    'icon-smartphone': HTMLIconSmartphoneElement;
    'icon-smile': HTMLIconSmileElement;
    'icon-speaker': HTMLIconSpeakerElement;
    'icon-square': HTMLIconSquareElement;
    'icon-star': HTMLIconStarElement;
    'icon-stop-circle': HTMLIconStopCircleElement;
    'icon-sun': HTMLIconSunElement;
    'icon-sunrise': HTMLIconSunriseElement;
    'icon-sunset': HTMLIconSunsetElement;
    'icon-table': HTMLIconTableElement;
    'icon-tablet': HTMLIconTabletElement;
    'icon-tag': HTMLIconTagElement;
    'icon-target': HTMLIconTargetElement;
    'icon-terminal': HTMLIconTerminalElement;
    'icon-thermometer': HTMLIconThermometerElement;
    'icon-thumbs-down': HTMLIconThumbsDownElement;
    'icon-thumbs-up': HTMLIconThumbsUpElement;
    'icon-toggle-left': HTMLIconToggleLeftElement;
    'icon-toggle-right': HTMLIconToggleRightElement;
    'icon-tool': HTMLIconToolElement;
    'icon-trash': HTMLIconTrashElement;
    'icon-trash-2': HTMLIconTrash2Element;
    'icon-trello': HTMLIconTrelloElement;
    'icon-trending-down': HTMLIconTrendingDownElement;
    'icon-trending-up': HTMLIconTrendingUpElement;
    'icon-triangle': HTMLIconTriangleElement;
    'icon-truck': HTMLIconTruckElement;
    'icon-tv': HTMLIconTvElement;
    'icon-twitch': HTMLIconTwitchElement;
    'icon-twitter': HTMLIconTwitterElement;
    'icon-type': HTMLIconTypeElement;
    'icon-umbrella': HTMLIconUmbrellaElement;
    'icon-underline': HTMLIconUnderlineElement;
    'icon-unlock': HTMLIconUnlockElement;
    'icon-upload': HTMLIconUploadElement;
    'icon-upload-cloud': HTMLIconUploadCloudElement;
    'icon-user': HTMLIconUserElement;
    'icon-user-check': HTMLIconUserCheckElement;
    'icon-user-minus': HTMLIconUserMinusElement;
    'icon-user-plus': HTMLIconUserPlusElement;
    'icon-user-x': HTMLIconUserXElement;
    'icon-users': HTMLIconUsersElement;
    'icon-video': HTMLIconVideoElement;
    'icon-video-off': HTMLIconVideoOffElement;
    'icon-voicemail': HTMLIconVoicemailElement;
    'icon-volume': HTMLIconVolumeElement;
    'icon-volume-1': HTMLIconVolume1Element;
    'icon-volume-2': HTMLIconVolume2Element;
    'icon-volume-x': HTMLIconVolumeXElement;
    'icon-watch': HTMLIconWatchElement;
    'icon-wifi': HTMLIconWifiElement;
    'icon-wifi-off': HTMLIconWifiOffElement;
    'icon-wind': HTMLIconWindElement;
    'icon-x': HTMLIconXElement;
    'icon-x-circle': HTMLIconXCircleElement;
    'icon-x-octagon': HTMLIconXOctagonElement;
    'icon-x-square': HTMLIconXSquareElement;
    'icon-youtube': HTMLIconYoutubeElement;
    'icon-zap': HTMLIconZapElement;
    'icon-zap-off': HTMLIconZapOffElement;
    'icon-zoom-in': HTMLIconZoomInElement;
    'icon-zoom-out': HTMLIconZoomOutElement;
    'my-component': HTMLMyComponentElement;
  }
}
declare namespace LocalJSX {
  interface IconActivity {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAirplay {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlertCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlertOctagon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlertTriangle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlignCenter {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlignJustify {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlignLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAlignRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAnchor {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAperture {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArchive {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowDownCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowDownLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowDownRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowLeftCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowRightCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowUpCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowUpLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconArrowUpRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAtSign {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconAward {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBarChart {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBarChart2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBattery {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBatteryCharging {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBell {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBellOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBluetooth {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBold {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBook {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBookOpen {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBookmark {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBox {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconBriefcase {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCalendar {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCamera {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCameraOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCast {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCheck {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCheckCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCheckSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronsDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronsLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronsRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChevronsUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconChrome {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconClipboard {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconClock {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloud {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudDrizzle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudLightning {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudRain {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCloudSnow {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCode {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCodepen {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCodesandbox {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCoffee {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconColumns {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCommand {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCompass {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCopy {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerDownLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerDownRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerLeftDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerLeftUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerRightDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerRightUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerUpLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCornerUpRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCpu {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCreditCard {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCrop {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconCrosshair {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDatabase {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDelete {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDisc {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDivide {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDivideCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDivideSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDollarSign {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDownload {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDownloadCloud {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDribbble {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconDroplet {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEdit {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEdit2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEdit3 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconExternalLink {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEye {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconEyeOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFacebook {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFastForward {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFeather {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFigma {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFile {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFileMinus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFilePlus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFileText {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFilm {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFilter {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFlag {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFolder {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFolderMinus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFolderPlus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFramer {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconFrown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGift {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitBranch {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitCommit {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitMerge {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitPullRequest {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGithub {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGitlab {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGlobe {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconGrid {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHardDrive {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHash {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHeadphones {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHeart {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHelpCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHexagon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconHome {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconImage {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconInbox {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconInfo {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconInstagram {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconItalic {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconKey {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLayers {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLayout {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLifeBuoy {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLink {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLink2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLinkedin {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconList {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLoader {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLock {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLogIn {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconLogOut {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMail {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMap {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMapPin {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMaximize {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMaximize2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMeh {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMenu {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMessageCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMessageSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMic {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMicOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinimize {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinimize2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinusCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMinusSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMonitor {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMoon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMoreHorizontal {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMoreVertical {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMousePointer {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMove {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconMusic {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconNavigation {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconNavigation2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconOctagon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPackage {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPaperclip {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPause {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPauseCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPenTool {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPercent {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhone {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneCall {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneForwarded {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneIncoming {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneMissed {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPhoneOutgoing {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPieChart {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlay {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlayCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlusCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPlusSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPocket {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPower {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconPrinter {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRadio {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRefreshCcw {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRefreshCw {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRepeat {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRewind {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRotateCcw {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRotateCw {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconRss {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSave {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconScissors {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSearch {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSend {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconServer {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSettings {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShare2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShield {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShieldOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShoppingBag {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShoppingCart {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconShuffle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSidebar {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSkipBack {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSkipForward {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSlack {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSlash {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSliders {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSmartphone {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSmile {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSpeaker {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconStar {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconStopCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSun {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSunrise {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconSunset {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTable {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTablet {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTag {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTarget {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTerminal {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconThermometer {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconThumbsDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconThumbsUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconToggleLeft {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconToggleRight {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTool {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrash {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrash2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrello {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrendingDown {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTrendingUp {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTriangle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTruck {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTv {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTwitch {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconTwitter {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconType {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUmbrella {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUnderline {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUnlock {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUpload {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUploadCloud {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUser {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUserCheck {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUserMinus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUserPlus {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUserX {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconUsers {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVideo {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVideoOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVoicemail {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVolume {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVolume1 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVolume2 {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconVolumeX {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconWatch {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconWifi {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconWifiOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconWind {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconX {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconXCircle {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconXOctagon {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconXSquare {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconYoutube {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconZap {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconZapOff {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconZoomIn {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface IconZoomOut {
    /**
     * The size the icon will be displayed at
     */
    size?: IconSize;
  }
  interface MyComponent {
    /**
     * The first name
     */
    first?: string;
    /**
     * The last name
     */
    last?: string;
    /**
     * The middle name
     */
    middle?: string;
  }
  interface IntrinsicElements {
    'icon-activity': IconActivity;
    'icon-airplay': IconAirplay;
    'icon-alert-circle': IconAlertCircle;
    'icon-alert-octagon': IconAlertOctagon;
    'icon-alert-triangle': IconAlertTriangle;
    'icon-align-center': IconAlignCenter;
    'icon-align-justify': IconAlignJustify;
    'icon-align-left': IconAlignLeft;
    'icon-align-right': IconAlignRight;
    'icon-anchor': IconAnchor;
    'icon-aperture': IconAperture;
    'icon-archive': IconArchive;
    'icon-arrow-down': IconArrowDown;
    'icon-arrow-down-circle': IconArrowDownCircle;
    'icon-arrow-down-left': IconArrowDownLeft;
    'icon-arrow-down-right': IconArrowDownRight;
    'icon-arrow-left': IconArrowLeft;
    'icon-arrow-left-circle': IconArrowLeftCircle;
    'icon-arrow-right': IconArrowRight;
    'icon-arrow-right-circle': IconArrowRightCircle;
    'icon-arrow-up': IconArrowUp;
    'icon-arrow-up-circle': IconArrowUpCircle;
    'icon-arrow-up-left': IconArrowUpLeft;
    'icon-arrow-up-right': IconArrowUpRight;
    'icon-at-sign': IconAtSign;
    'icon-award': IconAward;
    'icon-bar-chart': IconBarChart;
    'icon-bar-chart-2': IconBarChart2;
    'icon-battery': IconBattery;
    'icon-battery-charging': IconBatteryCharging;
    'icon-bell': IconBell;
    'icon-bell-off': IconBellOff;
    'icon-bluetooth': IconBluetooth;
    'icon-bold': IconBold;
    'icon-book': IconBook;
    'icon-book-open': IconBookOpen;
    'icon-bookmark': IconBookmark;
    'icon-box': IconBox;
    'icon-briefcase': IconBriefcase;
    'icon-calendar': IconCalendar;
    'icon-camera': IconCamera;
    'icon-camera-off': IconCameraOff;
    'icon-cast': IconCast;
    'icon-check': IconCheck;
    'icon-check-circle': IconCheckCircle;
    'icon-check-square': IconCheckSquare;
    'icon-chevron-down': IconChevronDown;
    'icon-chevron-left': IconChevronLeft;
    'icon-chevron-right': IconChevronRight;
    'icon-chevron-up': IconChevronUp;
    'icon-chevrons-down': IconChevronsDown;
    'icon-chevrons-left': IconChevronsLeft;
    'icon-chevrons-right': IconChevronsRight;
    'icon-chevrons-up': IconChevronsUp;
    'icon-chrome': IconChrome;
    'icon-circle': IconCircle;
    'icon-clipboard': IconClipboard;
    'icon-clock': IconClock;
    'icon-cloud': IconCloud;
    'icon-cloud-drizzle': IconCloudDrizzle;
    'icon-cloud-lightning': IconCloudLightning;
    'icon-cloud-off': IconCloudOff;
    'icon-cloud-rain': IconCloudRain;
    'icon-cloud-snow': IconCloudSnow;
    'icon-code': IconCode;
    'icon-codepen': IconCodepen;
    'icon-codesandbox': IconCodesandbox;
    'icon-coffee': IconCoffee;
    'icon-columns': IconColumns;
    'icon-command': IconCommand;
    'icon-compass': IconCompass;
    'icon-copy': IconCopy;
    'icon-corner-down-left': IconCornerDownLeft;
    'icon-corner-down-right': IconCornerDownRight;
    'icon-corner-left-down': IconCornerLeftDown;
    'icon-corner-left-up': IconCornerLeftUp;
    'icon-corner-right-down': IconCornerRightDown;
    'icon-corner-right-up': IconCornerRightUp;
    'icon-corner-up-left': IconCornerUpLeft;
    'icon-corner-up-right': IconCornerUpRight;
    'icon-cpu': IconCpu;
    'icon-credit-card': IconCreditCard;
    'icon-crop': IconCrop;
    'icon-crosshair': IconCrosshair;
    'icon-database': IconDatabase;
    'icon-delete': IconDelete;
    'icon-disc': IconDisc;
    'icon-divide': IconDivide;
    'icon-divide-circle': IconDivideCircle;
    'icon-divide-square': IconDivideSquare;
    'icon-dollar-sign': IconDollarSign;
    'icon-download': IconDownload;
    'icon-download-cloud': IconDownloadCloud;
    'icon-dribbble': IconDribbble;
    'icon-droplet': IconDroplet;
    'icon-edit': IconEdit;
    'icon-edit-2': IconEdit2;
    'icon-edit-3': IconEdit3;
    'icon-external-link': IconExternalLink;
    'icon-eye': IconEye;
    'icon-eye-off': IconEyeOff;
    'icon-facebook': IconFacebook;
    'icon-fast-forward': IconFastForward;
    'icon-feather': IconFeather;
    'icon-figma': IconFigma;
    'icon-file': IconFile;
    'icon-file-minus': IconFileMinus;
    'icon-file-plus': IconFilePlus;
    'icon-file-text': IconFileText;
    'icon-film': IconFilm;
    'icon-filter': IconFilter;
    'icon-flag': IconFlag;
    'icon-folder': IconFolder;
    'icon-folder-minus': IconFolderMinus;
    'icon-folder-plus': IconFolderPlus;
    'icon-framer': IconFramer;
    'icon-frown': IconFrown;
    'icon-gift': IconGift;
    'icon-git-branch': IconGitBranch;
    'icon-git-commit': IconGitCommit;
    'icon-git-merge': IconGitMerge;
    'icon-git-pull-request': IconGitPullRequest;
    'icon-github': IconGithub;
    'icon-gitlab': IconGitlab;
    'icon-globe': IconGlobe;
    'icon-grid': IconGrid;
    'icon-hard-drive': IconHardDrive;
    'icon-hash': IconHash;
    'icon-headphones': IconHeadphones;
    'icon-heart': IconHeart;
    'icon-help-circle': IconHelpCircle;
    'icon-hexagon': IconHexagon;
    'icon-home': IconHome;
    'icon-image': IconImage;
    'icon-inbox': IconInbox;
    'icon-info': IconInfo;
    'icon-instagram': IconInstagram;
    'icon-italic': IconItalic;
    'icon-key': IconKey;
    'icon-layers': IconLayers;
    'icon-layout': IconLayout;
    'icon-life-buoy': IconLifeBuoy;
    'icon-link': IconLink;
    'icon-link-2': IconLink2;
    'icon-linkedin': IconLinkedin;
    'icon-list': IconList;
    'icon-loader': IconLoader;
    'icon-lock': IconLock;
    'icon-log-in': IconLogIn;
    'icon-log-out': IconLogOut;
    'icon-mail': IconMail;
    'icon-map': IconMap;
    'icon-map-pin': IconMapPin;
    'icon-maximize': IconMaximize;
    'icon-maximize-2': IconMaximize2;
    'icon-meh': IconMeh;
    'icon-menu': IconMenu;
    'icon-message-circle': IconMessageCircle;
    'icon-message-square': IconMessageSquare;
    'icon-mic': IconMic;
    'icon-mic-off': IconMicOff;
    'icon-minimize': IconMinimize;
    'icon-minimize-2': IconMinimize2;
    'icon-minus': IconMinus;
    'icon-minus-circle': IconMinusCircle;
    'icon-minus-square': IconMinusSquare;
    'icon-monitor': IconMonitor;
    'icon-moon': IconMoon;
    'icon-more-horizontal': IconMoreHorizontal;
    'icon-more-vertical': IconMoreVertical;
    'icon-mouse-pointer': IconMousePointer;
    'icon-move': IconMove;
    'icon-music': IconMusic;
    'icon-navigation': IconNavigation;
    'icon-navigation-2': IconNavigation2;
    'icon-octagon': IconOctagon;
    'icon-package': IconPackage;
    'icon-paperclip': IconPaperclip;
    'icon-pause': IconPause;
    'icon-pause-circle': IconPauseCircle;
    'icon-pen-tool': IconPenTool;
    'icon-percent': IconPercent;
    'icon-phone': IconPhone;
    'icon-phone-call': IconPhoneCall;
    'icon-phone-forwarded': IconPhoneForwarded;
    'icon-phone-incoming': IconPhoneIncoming;
    'icon-phone-missed': IconPhoneMissed;
    'icon-phone-off': IconPhoneOff;
    'icon-phone-outgoing': IconPhoneOutgoing;
    'icon-pie-chart': IconPieChart;
    'icon-play': IconPlay;
    'icon-play-circle': IconPlayCircle;
    'icon-plus': IconPlus;
    'icon-plus-circle': IconPlusCircle;
    'icon-plus-square': IconPlusSquare;
    'icon-pocket': IconPocket;
    'icon-power': IconPower;
    'icon-printer': IconPrinter;
    'icon-radio': IconRadio;
    'icon-refresh-ccw': IconRefreshCcw;
    'icon-refresh-cw': IconRefreshCw;
    'icon-repeat': IconRepeat;
    'icon-rewind': IconRewind;
    'icon-rotate-ccw': IconRotateCcw;
    'icon-rotate-cw': IconRotateCw;
    'icon-rss': IconRss;
    'icon-save': IconSave;
    'icon-scissors': IconScissors;
    'icon-search': IconSearch;
    'icon-send': IconSend;
    'icon-server': IconServer;
    'icon-settings': IconSettings;
    'icon-share': IconShare;
    'icon-share-2': IconShare2;
    'icon-shield': IconShield;
    'icon-shield-off': IconShieldOff;
    'icon-shopping-bag': IconShoppingBag;
    'icon-shopping-cart': IconShoppingCart;
    'icon-shuffle': IconShuffle;
    'icon-sidebar': IconSidebar;
    'icon-skip-back': IconSkipBack;
    'icon-skip-forward': IconSkipForward;
    'icon-slack': IconSlack;
    'icon-slash': IconSlash;
    'icon-sliders': IconSliders;
    'icon-smartphone': IconSmartphone;
    'icon-smile': IconSmile;
    'icon-speaker': IconSpeaker;
    'icon-square': IconSquare;
    'icon-star': IconStar;
    'icon-stop-circle': IconStopCircle;
    'icon-sun': IconSun;
    'icon-sunrise': IconSunrise;
    'icon-sunset': IconSunset;
    'icon-table': IconTable;
    'icon-tablet': IconTablet;
    'icon-tag': IconTag;
    'icon-target': IconTarget;
    'icon-terminal': IconTerminal;
    'icon-thermometer': IconThermometer;
    'icon-thumbs-down': IconThumbsDown;
    'icon-thumbs-up': IconThumbsUp;
    'icon-toggle-left': IconToggleLeft;
    'icon-toggle-right': IconToggleRight;
    'icon-tool': IconTool;
    'icon-trash': IconTrash;
    'icon-trash-2': IconTrash2;
    'icon-trello': IconTrello;
    'icon-trending-down': IconTrendingDown;
    'icon-trending-up': IconTrendingUp;
    'icon-triangle': IconTriangle;
    'icon-truck': IconTruck;
    'icon-tv': IconTv;
    'icon-twitch': IconTwitch;
    'icon-twitter': IconTwitter;
    'icon-type': IconType;
    'icon-umbrella': IconUmbrella;
    'icon-underline': IconUnderline;
    'icon-unlock': IconUnlock;
    'icon-upload': IconUpload;
    'icon-upload-cloud': IconUploadCloud;
    'icon-user': IconUser;
    'icon-user-check': IconUserCheck;
    'icon-user-minus': IconUserMinus;
    'icon-user-plus': IconUserPlus;
    'icon-user-x': IconUserX;
    'icon-users': IconUsers;
    'icon-video': IconVideo;
    'icon-video-off': IconVideoOff;
    'icon-voicemail': IconVoicemail;
    'icon-volume': IconVolume;
    'icon-volume-1': IconVolume1;
    'icon-volume-2': IconVolume2;
    'icon-volume-x': IconVolumeX;
    'icon-watch': IconWatch;
    'icon-wifi': IconWifi;
    'icon-wifi-off': IconWifiOff;
    'icon-wind': IconWind;
    'icon-x': IconX;
    'icon-x-circle': IconXCircle;
    'icon-x-octagon': IconXOctagon;
    'icon-x-square': IconXSquare;
    'icon-youtube': IconYoutube;
    'icon-zap': IconZap;
    'icon-zap-off': IconZapOff;
    'icon-zoom-in': IconZoomIn;
    'icon-zoom-out': IconZoomOut;
    'my-component': MyComponent;
  }
}
export { LocalJSX as JSX };
declare module '@stencil/core' {
  export namespace JSX {
    interface IntrinsicElements {
      'icon-activity': LocalJSX.IconActivity & JSXBase.HTMLAttributes<HTMLIconActivityElement>;
      'icon-airplay': LocalJSX.IconAirplay & JSXBase.HTMLAttributes<HTMLIconAirplayElement>;
      'icon-alert-circle': LocalJSX.IconAlertCircle & JSXBase.HTMLAttributes<HTMLIconAlertCircleElement>;
      'icon-alert-octagon': LocalJSX.IconAlertOctagon & JSXBase.HTMLAttributes<HTMLIconAlertOctagonElement>;
      'icon-alert-triangle': LocalJSX.IconAlertTriangle & JSXBase.HTMLAttributes<HTMLIconAlertTriangleElement>;
      'icon-align-center': LocalJSX.IconAlignCenter & JSXBase.HTMLAttributes<HTMLIconAlignCenterElement>;
      'icon-align-justify': LocalJSX.IconAlignJustify & JSXBase.HTMLAttributes<HTMLIconAlignJustifyElement>;
      'icon-align-left': LocalJSX.IconAlignLeft & JSXBase.HTMLAttributes<HTMLIconAlignLeftElement>;
      'icon-align-right': LocalJSX.IconAlignRight & JSXBase.HTMLAttributes<HTMLIconAlignRightElement>;
      'icon-anchor': LocalJSX.IconAnchor & JSXBase.HTMLAttributes<HTMLIconAnchorElement>;
      'icon-aperture': LocalJSX.IconAperture & JSXBase.HTMLAttributes<HTMLIconApertureElement>;
      'icon-archive': LocalJSX.IconArchive & JSXBase.HTMLAttributes<HTMLIconArchiveElement>;
      'icon-arrow-down': LocalJSX.IconArrowDown & JSXBase.HTMLAttributes<HTMLIconArrowDownElement>;
      'icon-arrow-down-circle': LocalJSX.IconArrowDownCircle & JSXBase.HTMLAttributes<HTMLIconArrowDownCircleElement>;
      'icon-arrow-down-left': LocalJSX.IconArrowDownLeft & JSXBase.HTMLAttributes<HTMLIconArrowDownLeftElement>;
      'icon-arrow-down-right': LocalJSX.IconArrowDownRight & JSXBase.HTMLAttributes<HTMLIconArrowDownRightElement>;
      'icon-arrow-left': LocalJSX.IconArrowLeft & JSXBase.HTMLAttributes<HTMLIconArrowLeftElement>;
      'icon-arrow-left-circle': LocalJSX.IconArrowLeftCircle & JSXBase.HTMLAttributes<HTMLIconArrowLeftCircleElement>;
      'icon-arrow-right': LocalJSX.IconArrowRight & JSXBase.HTMLAttributes<HTMLIconArrowRightElement>;
      'icon-arrow-right-circle': LocalJSX.IconArrowRightCircle & JSXBase.HTMLAttributes<HTMLIconArrowRightCircleElement>;
      'icon-arrow-up': LocalJSX.IconArrowUp & JSXBase.HTMLAttributes<HTMLIconArrowUpElement>;
      'icon-arrow-up-circle': LocalJSX.IconArrowUpCircle & JSXBase.HTMLAttributes<HTMLIconArrowUpCircleElement>;
      'icon-arrow-up-left': LocalJSX.IconArrowUpLeft & JSXBase.HTMLAttributes<HTMLIconArrowUpLeftElement>;
      'icon-arrow-up-right': LocalJSX.IconArrowUpRight & JSXBase.HTMLAttributes<HTMLIconArrowUpRightElement>;
      'icon-at-sign': LocalJSX.IconAtSign & JSXBase.HTMLAttributes<HTMLIconAtSignElement>;
      'icon-award': LocalJSX.IconAward & JSXBase.HTMLAttributes<HTMLIconAwardElement>;
      'icon-bar-chart': LocalJSX.IconBarChart & JSXBase.HTMLAttributes<HTMLIconBarChartElement>;
      'icon-bar-chart-2': LocalJSX.IconBarChart2 & JSXBase.HTMLAttributes<HTMLIconBarChart2Element>;
      'icon-battery': LocalJSX.IconBattery & JSXBase.HTMLAttributes<HTMLIconBatteryElement>;
      'icon-battery-charging': LocalJSX.IconBatteryCharging & JSXBase.HTMLAttributes<HTMLIconBatteryChargingElement>;
      'icon-bell': LocalJSX.IconBell & JSXBase.HTMLAttributes<HTMLIconBellElement>;
      'icon-bell-off': LocalJSX.IconBellOff & JSXBase.HTMLAttributes<HTMLIconBellOffElement>;
      'icon-bluetooth': LocalJSX.IconBluetooth & JSXBase.HTMLAttributes<HTMLIconBluetoothElement>;
      'icon-bold': LocalJSX.IconBold & JSXBase.HTMLAttributes<HTMLIconBoldElement>;
      'icon-book': LocalJSX.IconBook & JSXBase.HTMLAttributes<HTMLIconBookElement>;
      'icon-book-open': LocalJSX.IconBookOpen & JSXBase.HTMLAttributes<HTMLIconBookOpenElement>;
      'icon-bookmark': LocalJSX.IconBookmark & JSXBase.HTMLAttributes<HTMLIconBookmarkElement>;
      'icon-box': LocalJSX.IconBox & JSXBase.HTMLAttributes<HTMLIconBoxElement>;
      'icon-briefcase': LocalJSX.IconBriefcase & JSXBase.HTMLAttributes<HTMLIconBriefcaseElement>;
      'icon-calendar': LocalJSX.IconCalendar & JSXBase.HTMLAttributes<HTMLIconCalendarElement>;
      'icon-camera': LocalJSX.IconCamera & JSXBase.HTMLAttributes<HTMLIconCameraElement>;
      'icon-camera-off': LocalJSX.IconCameraOff & JSXBase.HTMLAttributes<HTMLIconCameraOffElement>;
      'icon-cast': LocalJSX.IconCast & JSXBase.HTMLAttributes<HTMLIconCastElement>;
      'icon-check': LocalJSX.IconCheck & JSXBase.HTMLAttributes<HTMLIconCheckElement>;
      'icon-check-circle': LocalJSX.IconCheckCircle & JSXBase.HTMLAttributes<HTMLIconCheckCircleElement>;
      'icon-check-square': LocalJSX.IconCheckSquare & JSXBase.HTMLAttributes<HTMLIconCheckSquareElement>;
      'icon-chevron-down': LocalJSX.IconChevronDown & JSXBase.HTMLAttributes<HTMLIconChevronDownElement>;
      'icon-chevron-left': LocalJSX.IconChevronLeft & JSXBase.HTMLAttributes<HTMLIconChevronLeftElement>;
      'icon-chevron-right': LocalJSX.IconChevronRight & JSXBase.HTMLAttributes<HTMLIconChevronRightElement>;
      'icon-chevron-up': LocalJSX.IconChevronUp & JSXBase.HTMLAttributes<HTMLIconChevronUpElement>;
      'icon-chevrons-down': LocalJSX.IconChevronsDown & JSXBase.HTMLAttributes<HTMLIconChevronsDownElement>;
      'icon-chevrons-left': LocalJSX.IconChevronsLeft & JSXBase.HTMLAttributes<HTMLIconChevronsLeftElement>;
      'icon-chevrons-right': LocalJSX.IconChevronsRight & JSXBase.HTMLAttributes<HTMLIconChevronsRightElement>;
      'icon-chevrons-up': LocalJSX.IconChevronsUp & JSXBase.HTMLAttributes<HTMLIconChevronsUpElement>;
      'icon-chrome': LocalJSX.IconChrome & JSXBase.HTMLAttributes<HTMLIconChromeElement>;
      'icon-circle': LocalJSX.IconCircle & JSXBase.HTMLAttributes<HTMLIconCircleElement>;
      'icon-clipboard': LocalJSX.IconClipboard & JSXBase.HTMLAttributes<HTMLIconClipboardElement>;
      'icon-clock': LocalJSX.IconClock & JSXBase.HTMLAttributes<HTMLIconClockElement>;
      'icon-cloud': LocalJSX.IconCloud & JSXBase.HTMLAttributes<HTMLIconCloudElement>;
      'icon-cloud-drizzle': LocalJSX.IconCloudDrizzle & JSXBase.HTMLAttributes<HTMLIconCloudDrizzleElement>;
      'icon-cloud-lightning': LocalJSX.IconCloudLightning & JSXBase.HTMLAttributes<HTMLIconCloudLightningElement>;
      'icon-cloud-off': LocalJSX.IconCloudOff & JSXBase.HTMLAttributes<HTMLIconCloudOffElement>;
      'icon-cloud-rain': LocalJSX.IconCloudRain & JSXBase.HTMLAttributes<HTMLIconCloudRainElement>;
      'icon-cloud-snow': LocalJSX.IconCloudSnow & JSXBase.HTMLAttributes<HTMLIconCloudSnowElement>;
      'icon-code': LocalJSX.IconCode & JSXBase.HTMLAttributes<HTMLIconCodeElement>;
      'icon-codepen': LocalJSX.IconCodepen & JSXBase.HTMLAttributes<HTMLIconCodepenElement>;
      'icon-codesandbox': LocalJSX.IconCodesandbox & JSXBase.HTMLAttributes<HTMLIconCodesandboxElement>;
      'icon-coffee': LocalJSX.IconCoffee & JSXBase.HTMLAttributes<HTMLIconCoffeeElement>;
      'icon-columns': LocalJSX.IconColumns & JSXBase.HTMLAttributes<HTMLIconColumnsElement>;
      'icon-command': LocalJSX.IconCommand & JSXBase.HTMLAttributes<HTMLIconCommandElement>;
      'icon-compass': LocalJSX.IconCompass & JSXBase.HTMLAttributes<HTMLIconCompassElement>;
      'icon-copy': LocalJSX.IconCopy & JSXBase.HTMLAttributes<HTMLIconCopyElement>;
      'icon-corner-down-left': LocalJSX.IconCornerDownLeft & JSXBase.HTMLAttributes<HTMLIconCornerDownLeftElement>;
      'icon-corner-down-right': LocalJSX.IconCornerDownRight & JSXBase.HTMLAttributes<HTMLIconCornerDownRightElement>;
      'icon-corner-left-down': LocalJSX.IconCornerLeftDown & JSXBase.HTMLAttributes<HTMLIconCornerLeftDownElement>;
      'icon-corner-left-up': LocalJSX.IconCornerLeftUp & JSXBase.HTMLAttributes<HTMLIconCornerLeftUpElement>;
      'icon-corner-right-down': LocalJSX.IconCornerRightDown & JSXBase.HTMLAttributes<HTMLIconCornerRightDownElement>;
      'icon-corner-right-up': LocalJSX.IconCornerRightUp & JSXBase.HTMLAttributes<HTMLIconCornerRightUpElement>;
      'icon-corner-up-left': LocalJSX.IconCornerUpLeft & JSXBase.HTMLAttributes<HTMLIconCornerUpLeftElement>;
      'icon-corner-up-right': LocalJSX.IconCornerUpRight & JSXBase.HTMLAttributes<HTMLIconCornerUpRightElement>;
      'icon-cpu': LocalJSX.IconCpu & JSXBase.HTMLAttributes<HTMLIconCpuElement>;
      'icon-credit-card': LocalJSX.IconCreditCard & JSXBase.HTMLAttributes<HTMLIconCreditCardElement>;
      'icon-crop': LocalJSX.IconCrop & JSXBase.HTMLAttributes<HTMLIconCropElement>;
      'icon-crosshair': LocalJSX.IconCrosshair & JSXBase.HTMLAttributes<HTMLIconCrosshairElement>;
      'icon-database': LocalJSX.IconDatabase & JSXBase.HTMLAttributes<HTMLIconDatabaseElement>;
      'icon-delete': LocalJSX.IconDelete & JSXBase.HTMLAttributes<HTMLIconDeleteElement>;
      'icon-disc': LocalJSX.IconDisc & JSXBase.HTMLAttributes<HTMLIconDiscElement>;
      'icon-divide': LocalJSX.IconDivide & JSXBase.HTMLAttributes<HTMLIconDivideElement>;
      'icon-divide-circle': LocalJSX.IconDivideCircle & JSXBase.HTMLAttributes<HTMLIconDivideCircleElement>;
      'icon-divide-square': LocalJSX.IconDivideSquare & JSXBase.HTMLAttributes<HTMLIconDivideSquareElement>;
      'icon-dollar-sign': LocalJSX.IconDollarSign & JSXBase.HTMLAttributes<HTMLIconDollarSignElement>;
      'icon-download': LocalJSX.IconDownload & JSXBase.HTMLAttributes<HTMLIconDownloadElement>;
      'icon-download-cloud': LocalJSX.IconDownloadCloud & JSXBase.HTMLAttributes<HTMLIconDownloadCloudElement>;
      'icon-dribbble': LocalJSX.IconDribbble & JSXBase.HTMLAttributes<HTMLIconDribbbleElement>;
      'icon-droplet': LocalJSX.IconDroplet & JSXBase.HTMLAttributes<HTMLIconDropletElement>;
      'icon-edit': LocalJSX.IconEdit & JSXBase.HTMLAttributes<HTMLIconEditElement>;
      'icon-edit-2': LocalJSX.IconEdit2 & JSXBase.HTMLAttributes<HTMLIconEdit2Element>;
      'icon-edit-3': LocalJSX.IconEdit3 & JSXBase.HTMLAttributes<HTMLIconEdit3Element>;
      'icon-external-link': LocalJSX.IconExternalLink & JSXBase.HTMLAttributes<HTMLIconExternalLinkElement>;
      'icon-eye': LocalJSX.IconEye & JSXBase.HTMLAttributes<HTMLIconEyeElement>;
      'icon-eye-off': LocalJSX.IconEyeOff & JSXBase.HTMLAttributes<HTMLIconEyeOffElement>;
      'icon-facebook': LocalJSX.IconFacebook & JSXBase.HTMLAttributes<HTMLIconFacebookElement>;
      'icon-fast-forward': LocalJSX.IconFastForward & JSXBase.HTMLAttributes<HTMLIconFastForwardElement>;
      'icon-feather': LocalJSX.IconFeather & JSXBase.HTMLAttributes<HTMLIconFeatherElement>;
      'icon-figma': LocalJSX.IconFigma & JSXBase.HTMLAttributes<HTMLIconFigmaElement>;
      'icon-file': LocalJSX.IconFile & JSXBase.HTMLAttributes<HTMLIconFileElement>;
      'icon-file-minus': LocalJSX.IconFileMinus & JSXBase.HTMLAttributes<HTMLIconFileMinusElement>;
      'icon-file-plus': LocalJSX.IconFilePlus & JSXBase.HTMLAttributes<HTMLIconFilePlusElement>;
      'icon-file-text': LocalJSX.IconFileText & JSXBase.HTMLAttributes<HTMLIconFileTextElement>;
      'icon-film': LocalJSX.IconFilm & JSXBase.HTMLAttributes<HTMLIconFilmElement>;
      'icon-filter': LocalJSX.IconFilter & JSXBase.HTMLAttributes<HTMLIconFilterElement>;
      'icon-flag': LocalJSX.IconFlag & JSXBase.HTMLAttributes<HTMLIconFlagElement>;
      'icon-folder': LocalJSX.IconFolder & JSXBase.HTMLAttributes<HTMLIconFolderElement>;
      'icon-folder-minus': LocalJSX.IconFolderMinus & JSXBase.HTMLAttributes<HTMLIconFolderMinusElement>;
      'icon-folder-plus': LocalJSX.IconFolderPlus & JSXBase.HTMLAttributes<HTMLIconFolderPlusElement>;
      'icon-framer': LocalJSX.IconFramer & JSXBase.HTMLAttributes<HTMLIconFramerElement>;
      'icon-frown': LocalJSX.IconFrown & JSXBase.HTMLAttributes<HTMLIconFrownElement>;
      'icon-gift': LocalJSX.IconGift & JSXBase.HTMLAttributes<HTMLIconGiftElement>;
      'icon-git-branch': LocalJSX.IconGitBranch & JSXBase.HTMLAttributes<HTMLIconGitBranchElement>;
      'icon-git-commit': LocalJSX.IconGitCommit & JSXBase.HTMLAttributes<HTMLIconGitCommitElement>;
      'icon-git-merge': LocalJSX.IconGitMerge & JSXBase.HTMLAttributes<HTMLIconGitMergeElement>;
      'icon-git-pull-request': LocalJSX.IconGitPullRequest & JSXBase.HTMLAttributes<HTMLIconGitPullRequestElement>;
      'icon-github': LocalJSX.IconGithub & JSXBase.HTMLAttributes<HTMLIconGithubElement>;
      'icon-gitlab': LocalJSX.IconGitlab & JSXBase.HTMLAttributes<HTMLIconGitlabElement>;
      'icon-globe': LocalJSX.IconGlobe & JSXBase.HTMLAttributes<HTMLIconGlobeElement>;
      'icon-grid': LocalJSX.IconGrid & JSXBase.HTMLAttributes<HTMLIconGridElement>;
      'icon-hard-drive': LocalJSX.IconHardDrive & JSXBase.HTMLAttributes<HTMLIconHardDriveElement>;
      'icon-hash': LocalJSX.IconHash & JSXBase.HTMLAttributes<HTMLIconHashElement>;
      'icon-headphones': LocalJSX.IconHeadphones & JSXBase.HTMLAttributes<HTMLIconHeadphonesElement>;
      'icon-heart': LocalJSX.IconHeart & JSXBase.HTMLAttributes<HTMLIconHeartElement>;
      'icon-help-circle': LocalJSX.IconHelpCircle & JSXBase.HTMLAttributes<HTMLIconHelpCircleElement>;
      'icon-hexagon': LocalJSX.IconHexagon & JSXBase.HTMLAttributes<HTMLIconHexagonElement>;
      'icon-home': LocalJSX.IconHome & JSXBase.HTMLAttributes<HTMLIconHomeElement>;
      'icon-image': LocalJSX.IconImage & JSXBase.HTMLAttributes<HTMLIconImageElement>;
      'icon-inbox': LocalJSX.IconInbox & JSXBase.HTMLAttributes<HTMLIconInboxElement>;
      'icon-info': LocalJSX.IconInfo & JSXBase.HTMLAttributes<HTMLIconInfoElement>;
      'icon-instagram': LocalJSX.IconInstagram & JSXBase.HTMLAttributes<HTMLIconInstagramElement>;
      'icon-italic': LocalJSX.IconItalic & JSXBase.HTMLAttributes<HTMLIconItalicElement>;
      'icon-key': LocalJSX.IconKey & JSXBase.HTMLAttributes<HTMLIconKeyElement>;
      'icon-layers': LocalJSX.IconLayers & JSXBase.HTMLAttributes<HTMLIconLayersElement>;
      'icon-layout': LocalJSX.IconLayout & JSXBase.HTMLAttributes<HTMLIconLayoutElement>;
      'icon-life-buoy': LocalJSX.IconLifeBuoy & JSXBase.HTMLAttributes<HTMLIconLifeBuoyElement>;
      'icon-link': LocalJSX.IconLink & JSXBase.HTMLAttributes<HTMLIconLinkElement>;
      'icon-link-2': LocalJSX.IconLink2 & JSXBase.HTMLAttributes<HTMLIconLink2Element>;
      'icon-linkedin': LocalJSX.IconLinkedin & JSXBase.HTMLAttributes<HTMLIconLinkedinElement>;
      'icon-list': LocalJSX.IconList & JSXBase.HTMLAttributes<HTMLIconListElement>;
      'icon-loader': LocalJSX.IconLoader & JSXBase.HTMLAttributes<HTMLIconLoaderElement>;
      'icon-lock': LocalJSX.IconLock & JSXBase.HTMLAttributes<HTMLIconLockElement>;
      'icon-log-in': LocalJSX.IconLogIn & JSXBase.HTMLAttributes<HTMLIconLogInElement>;
      'icon-log-out': LocalJSX.IconLogOut & JSXBase.HTMLAttributes<HTMLIconLogOutElement>;
      'icon-mail': LocalJSX.IconMail & JSXBase.HTMLAttributes<HTMLIconMailElement>;
      'icon-map': LocalJSX.IconMap & JSXBase.HTMLAttributes<HTMLIconMapElement>;
      'icon-map-pin': LocalJSX.IconMapPin & JSXBase.HTMLAttributes<HTMLIconMapPinElement>;
      'icon-maximize': LocalJSX.IconMaximize & JSXBase.HTMLAttributes<HTMLIconMaximizeElement>;
      'icon-maximize-2': LocalJSX.IconMaximize2 & JSXBase.HTMLAttributes<HTMLIconMaximize2Element>;
      'icon-meh': LocalJSX.IconMeh & JSXBase.HTMLAttributes<HTMLIconMehElement>;
      'icon-menu': LocalJSX.IconMenu & JSXBase.HTMLAttributes<HTMLIconMenuElement>;
      'icon-message-circle': LocalJSX.IconMessageCircle & JSXBase.HTMLAttributes<HTMLIconMessageCircleElement>;
      'icon-message-square': LocalJSX.IconMessageSquare & JSXBase.HTMLAttributes<HTMLIconMessageSquareElement>;
      'icon-mic': LocalJSX.IconMic & JSXBase.HTMLAttributes<HTMLIconMicElement>;
      'icon-mic-off': LocalJSX.IconMicOff & JSXBase.HTMLAttributes<HTMLIconMicOffElement>;
      'icon-minimize': LocalJSX.IconMinimize & JSXBase.HTMLAttributes<HTMLIconMinimizeElement>;
      'icon-minimize-2': LocalJSX.IconMinimize2 & JSXBase.HTMLAttributes<HTMLIconMinimize2Element>;
      'icon-minus': LocalJSX.IconMinus & JSXBase.HTMLAttributes<HTMLIconMinusElement>;
      'icon-minus-circle': LocalJSX.IconMinusCircle & JSXBase.HTMLAttributes<HTMLIconMinusCircleElement>;
      'icon-minus-square': LocalJSX.IconMinusSquare & JSXBase.HTMLAttributes<HTMLIconMinusSquareElement>;
      'icon-monitor': LocalJSX.IconMonitor & JSXBase.HTMLAttributes<HTMLIconMonitorElement>;
      'icon-moon': LocalJSX.IconMoon & JSXBase.HTMLAttributes<HTMLIconMoonElement>;
      'icon-more-horizontal': LocalJSX.IconMoreHorizontal & JSXBase.HTMLAttributes<HTMLIconMoreHorizontalElement>;
      'icon-more-vertical': LocalJSX.IconMoreVertical & JSXBase.HTMLAttributes<HTMLIconMoreVerticalElement>;
      'icon-mouse-pointer': LocalJSX.IconMousePointer & JSXBase.HTMLAttributes<HTMLIconMousePointerElement>;
      'icon-move': LocalJSX.IconMove & JSXBase.HTMLAttributes<HTMLIconMoveElement>;
      'icon-music': LocalJSX.IconMusic & JSXBase.HTMLAttributes<HTMLIconMusicElement>;
      'icon-navigation': LocalJSX.IconNavigation & JSXBase.HTMLAttributes<HTMLIconNavigationElement>;
      'icon-navigation-2': LocalJSX.IconNavigation2 & JSXBase.HTMLAttributes<HTMLIconNavigation2Element>;
      'icon-octagon': LocalJSX.IconOctagon & JSXBase.HTMLAttributes<HTMLIconOctagonElement>;
      'icon-package': LocalJSX.IconPackage & JSXBase.HTMLAttributes<HTMLIconPackageElement>;
      'icon-paperclip': LocalJSX.IconPaperclip & JSXBase.HTMLAttributes<HTMLIconPaperclipElement>;
      'icon-pause': LocalJSX.IconPause & JSXBase.HTMLAttributes<HTMLIconPauseElement>;
      'icon-pause-circle': LocalJSX.IconPauseCircle & JSXBase.HTMLAttributes<HTMLIconPauseCircleElement>;
      'icon-pen-tool': LocalJSX.IconPenTool & JSXBase.HTMLAttributes<HTMLIconPenToolElement>;
      'icon-percent': LocalJSX.IconPercent & JSXBase.HTMLAttributes<HTMLIconPercentElement>;
      'icon-phone': LocalJSX.IconPhone & JSXBase.HTMLAttributes<HTMLIconPhoneElement>;
      'icon-phone-call': LocalJSX.IconPhoneCall & JSXBase.HTMLAttributes<HTMLIconPhoneCallElement>;
      'icon-phone-forwarded': LocalJSX.IconPhoneForwarded & JSXBase.HTMLAttributes<HTMLIconPhoneForwardedElement>;
      'icon-phone-incoming': LocalJSX.IconPhoneIncoming & JSXBase.HTMLAttributes<HTMLIconPhoneIncomingElement>;
      'icon-phone-missed': LocalJSX.IconPhoneMissed & JSXBase.HTMLAttributes<HTMLIconPhoneMissedElement>;
      'icon-phone-off': LocalJSX.IconPhoneOff & JSXBase.HTMLAttributes<HTMLIconPhoneOffElement>;
      'icon-phone-outgoing': LocalJSX.IconPhoneOutgoing & JSXBase.HTMLAttributes<HTMLIconPhoneOutgoingElement>;
      'icon-pie-chart': LocalJSX.IconPieChart & JSXBase.HTMLAttributes<HTMLIconPieChartElement>;
      'icon-play': LocalJSX.IconPlay & JSXBase.HTMLAttributes<HTMLIconPlayElement>;
      'icon-play-circle': LocalJSX.IconPlayCircle & JSXBase.HTMLAttributes<HTMLIconPlayCircleElement>;
      'icon-plus': LocalJSX.IconPlus & JSXBase.HTMLAttributes<HTMLIconPlusElement>;
      'icon-plus-circle': LocalJSX.IconPlusCircle & JSXBase.HTMLAttributes<HTMLIconPlusCircleElement>;
      'icon-plus-square': LocalJSX.IconPlusSquare & JSXBase.HTMLAttributes<HTMLIconPlusSquareElement>;
      'icon-pocket': LocalJSX.IconPocket & JSXBase.HTMLAttributes<HTMLIconPocketElement>;
      'icon-power': LocalJSX.IconPower & JSXBase.HTMLAttributes<HTMLIconPowerElement>;
      'icon-printer': LocalJSX.IconPrinter & JSXBase.HTMLAttributes<HTMLIconPrinterElement>;
      'icon-radio': LocalJSX.IconRadio & JSXBase.HTMLAttributes<HTMLIconRadioElement>;
      'icon-refresh-ccw': LocalJSX.IconRefreshCcw & JSXBase.HTMLAttributes<HTMLIconRefreshCcwElement>;
      'icon-refresh-cw': LocalJSX.IconRefreshCw & JSXBase.HTMLAttributes<HTMLIconRefreshCwElement>;
      'icon-repeat': LocalJSX.IconRepeat & JSXBase.HTMLAttributes<HTMLIconRepeatElement>;
      'icon-rewind': LocalJSX.IconRewind & JSXBase.HTMLAttributes<HTMLIconRewindElement>;
      'icon-rotate-ccw': LocalJSX.IconRotateCcw & JSXBase.HTMLAttributes<HTMLIconRotateCcwElement>;
      'icon-rotate-cw': LocalJSX.IconRotateCw & JSXBase.HTMLAttributes<HTMLIconRotateCwElement>;
      'icon-rss': LocalJSX.IconRss & JSXBase.HTMLAttributes<HTMLIconRssElement>;
      'icon-save': LocalJSX.IconSave & JSXBase.HTMLAttributes<HTMLIconSaveElement>;
      'icon-scissors': LocalJSX.IconScissors & JSXBase.HTMLAttributes<HTMLIconScissorsElement>;
      'icon-search': LocalJSX.IconSearch & JSXBase.HTMLAttributes<HTMLIconSearchElement>;
      'icon-send': LocalJSX.IconSend & JSXBase.HTMLAttributes<HTMLIconSendElement>;
      'icon-server': LocalJSX.IconServer & JSXBase.HTMLAttributes<HTMLIconServerElement>;
      'icon-settings': LocalJSX.IconSettings & JSXBase.HTMLAttributes<HTMLIconSettingsElement>;
      'icon-share': LocalJSX.IconShare & JSXBase.HTMLAttributes<HTMLIconShareElement>;
      'icon-share-2': LocalJSX.IconShare2 & JSXBase.HTMLAttributes<HTMLIconShare2Element>;
      'icon-shield': LocalJSX.IconShield & JSXBase.HTMLAttributes<HTMLIconShieldElement>;
      'icon-shield-off': LocalJSX.IconShieldOff & JSXBase.HTMLAttributes<HTMLIconShieldOffElement>;
      'icon-shopping-bag': LocalJSX.IconShoppingBag & JSXBase.HTMLAttributes<HTMLIconShoppingBagElement>;
      'icon-shopping-cart': LocalJSX.IconShoppingCart & JSXBase.HTMLAttributes<HTMLIconShoppingCartElement>;
      'icon-shuffle': LocalJSX.IconShuffle & JSXBase.HTMLAttributes<HTMLIconShuffleElement>;
      'icon-sidebar': LocalJSX.IconSidebar & JSXBase.HTMLAttributes<HTMLIconSidebarElement>;
      'icon-skip-back': LocalJSX.IconSkipBack & JSXBase.HTMLAttributes<HTMLIconSkipBackElement>;
      'icon-skip-forward': LocalJSX.IconSkipForward & JSXBase.HTMLAttributes<HTMLIconSkipForwardElement>;
      'icon-slack': LocalJSX.IconSlack & JSXBase.HTMLAttributes<HTMLIconSlackElement>;
      'icon-slash': LocalJSX.IconSlash & JSXBase.HTMLAttributes<HTMLIconSlashElement>;
      'icon-sliders': LocalJSX.IconSliders & JSXBase.HTMLAttributes<HTMLIconSlidersElement>;
      'icon-smartphone': LocalJSX.IconSmartphone & JSXBase.HTMLAttributes<HTMLIconSmartphoneElement>;
      'icon-smile': LocalJSX.IconSmile & JSXBase.HTMLAttributes<HTMLIconSmileElement>;
      'icon-speaker': LocalJSX.IconSpeaker & JSXBase.HTMLAttributes<HTMLIconSpeakerElement>;
      'icon-square': LocalJSX.IconSquare & JSXBase.HTMLAttributes<HTMLIconSquareElement>;
      'icon-star': LocalJSX.IconStar & JSXBase.HTMLAttributes<HTMLIconStarElement>;
      'icon-stop-circle': LocalJSX.IconStopCircle & JSXBase.HTMLAttributes<HTMLIconStopCircleElement>;
      'icon-sun': LocalJSX.IconSun & JSXBase.HTMLAttributes<HTMLIconSunElement>;
      'icon-sunrise': LocalJSX.IconSunrise & JSXBase.HTMLAttributes<HTMLIconSunriseElement>;
      'icon-sunset': LocalJSX.IconSunset & JSXBase.HTMLAttributes<HTMLIconSunsetElement>;
      'icon-table': LocalJSX.IconTable & JSXBase.HTMLAttributes<HTMLIconTableElement>;
      'icon-tablet': LocalJSX.IconTablet & JSXBase.HTMLAttributes<HTMLIconTabletElement>;
      'icon-tag': LocalJSX.IconTag & JSXBase.HTMLAttributes<HTMLIconTagElement>;
      'icon-target': LocalJSX.IconTarget & JSXBase.HTMLAttributes<HTMLIconTargetElement>;
      'icon-terminal': LocalJSX.IconTerminal & JSXBase.HTMLAttributes<HTMLIconTerminalElement>;
      'icon-thermometer': LocalJSX.IconThermometer & JSXBase.HTMLAttributes<HTMLIconThermometerElement>;
      'icon-thumbs-down': LocalJSX.IconThumbsDown & JSXBase.HTMLAttributes<HTMLIconThumbsDownElement>;
      'icon-thumbs-up': LocalJSX.IconThumbsUp & JSXBase.HTMLAttributes<HTMLIconThumbsUpElement>;
      'icon-toggle-left': LocalJSX.IconToggleLeft & JSXBase.HTMLAttributes<HTMLIconToggleLeftElement>;
      'icon-toggle-right': LocalJSX.IconToggleRight & JSXBase.HTMLAttributes<HTMLIconToggleRightElement>;
      'icon-tool': LocalJSX.IconTool & JSXBase.HTMLAttributes<HTMLIconToolElement>;
      'icon-trash': LocalJSX.IconTrash & JSXBase.HTMLAttributes<HTMLIconTrashElement>;
      'icon-trash-2': LocalJSX.IconTrash2 & JSXBase.HTMLAttributes<HTMLIconTrash2Element>;
      'icon-trello': LocalJSX.IconTrello & JSXBase.HTMLAttributes<HTMLIconTrelloElement>;
      'icon-trending-down': LocalJSX.IconTrendingDown & JSXBase.HTMLAttributes<HTMLIconTrendingDownElement>;
      'icon-trending-up': LocalJSX.IconTrendingUp & JSXBase.HTMLAttributes<HTMLIconTrendingUpElement>;
      'icon-triangle': LocalJSX.IconTriangle & JSXBase.HTMLAttributes<HTMLIconTriangleElement>;
      'icon-truck': LocalJSX.IconTruck & JSXBase.HTMLAttributes<HTMLIconTruckElement>;
      'icon-tv': LocalJSX.IconTv & JSXBase.HTMLAttributes<HTMLIconTvElement>;
      'icon-twitch': LocalJSX.IconTwitch & JSXBase.HTMLAttributes<HTMLIconTwitchElement>;
      'icon-twitter': LocalJSX.IconTwitter & JSXBase.HTMLAttributes<HTMLIconTwitterElement>;
      'icon-type': LocalJSX.IconType & JSXBase.HTMLAttributes<HTMLIconTypeElement>;
      'icon-umbrella': LocalJSX.IconUmbrella & JSXBase.HTMLAttributes<HTMLIconUmbrellaElement>;
      'icon-underline': LocalJSX.IconUnderline & JSXBase.HTMLAttributes<HTMLIconUnderlineElement>;
      'icon-unlock': LocalJSX.IconUnlock & JSXBase.HTMLAttributes<HTMLIconUnlockElement>;
      'icon-upload': LocalJSX.IconUpload & JSXBase.HTMLAttributes<HTMLIconUploadElement>;
      'icon-upload-cloud': LocalJSX.IconUploadCloud & JSXBase.HTMLAttributes<HTMLIconUploadCloudElement>;
      'icon-user': LocalJSX.IconUser & JSXBase.HTMLAttributes<HTMLIconUserElement>;
      'icon-user-check': LocalJSX.IconUserCheck & JSXBase.HTMLAttributes<HTMLIconUserCheckElement>;
      'icon-user-minus': LocalJSX.IconUserMinus & JSXBase.HTMLAttributes<HTMLIconUserMinusElement>;
      'icon-user-plus': LocalJSX.IconUserPlus & JSXBase.HTMLAttributes<HTMLIconUserPlusElement>;
      'icon-user-x': LocalJSX.IconUserX & JSXBase.HTMLAttributes<HTMLIconUserXElement>;
      'icon-users': LocalJSX.IconUsers & JSXBase.HTMLAttributes<HTMLIconUsersElement>;
      'icon-video': LocalJSX.IconVideo & JSXBase.HTMLAttributes<HTMLIconVideoElement>;
      'icon-video-off': LocalJSX.IconVideoOff & JSXBase.HTMLAttributes<HTMLIconVideoOffElement>;
      'icon-voicemail': LocalJSX.IconVoicemail & JSXBase.HTMLAttributes<HTMLIconVoicemailElement>;
      'icon-volume': LocalJSX.IconVolume & JSXBase.HTMLAttributes<HTMLIconVolumeElement>;
      'icon-volume-1': LocalJSX.IconVolume1 & JSXBase.HTMLAttributes<HTMLIconVolume1Element>;
      'icon-volume-2': LocalJSX.IconVolume2 & JSXBase.HTMLAttributes<HTMLIconVolume2Element>;
      'icon-volume-x': LocalJSX.IconVolumeX & JSXBase.HTMLAttributes<HTMLIconVolumeXElement>;
      'icon-watch': LocalJSX.IconWatch & JSXBase.HTMLAttributes<HTMLIconWatchElement>;
      'icon-wifi': LocalJSX.IconWifi & JSXBase.HTMLAttributes<HTMLIconWifiElement>;
      'icon-wifi-off': LocalJSX.IconWifiOff & JSXBase.HTMLAttributes<HTMLIconWifiOffElement>;
      'icon-wind': LocalJSX.IconWind & JSXBase.HTMLAttributes<HTMLIconWindElement>;
      'icon-x': LocalJSX.IconX & JSXBase.HTMLAttributes<HTMLIconXElement>;
      'icon-x-circle': LocalJSX.IconXCircle & JSXBase.HTMLAttributes<HTMLIconXCircleElement>;
      'icon-x-octagon': LocalJSX.IconXOctagon & JSXBase.HTMLAttributes<HTMLIconXOctagonElement>;
      'icon-x-square': LocalJSX.IconXSquare & JSXBase.HTMLAttributes<HTMLIconXSquareElement>;
      'icon-youtube': LocalJSX.IconYoutube & JSXBase.HTMLAttributes<HTMLIconYoutubeElement>;
      'icon-zap': LocalJSX.IconZap & JSXBase.HTMLAttributes<HTMLIconZapElement>;
      'icon-zap-off': LocalJSX.IconZapOff & JSXBase.HTMLAttributes<HTMLIconZapOffElement>;
      'icon-zoom-in': LocalJSX.IconZoomIn & JSXBase.HTMLAttributes<HTMLIconZoomInElement>;
      'icon-zoom-out': LocalJSX.IconZoomOut & JSXBase.HTMLAttributes<HTMLIconZoomOutElement>;
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
    }
  }
}
